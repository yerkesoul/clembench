{"experiments": [{"name": "none", "game_instances": [{"game_id": 0, "Prompt": "Please help me with the following task. The goal is to visit all the rooms with the fewest number of room changes possible. In each room, you need to decide the direction to go in. Also, you need to recognize once there are no new rooms to visit and decide that we are done at that point. Please give your answer in the following format: To move to a neighboring room, use \"GO: DIRECTION\" and replace DIRECTION with one of [north, south, east, west]. To stop the exploration, answer with \"DONE\" instead.\n\nHere is an example:\nYou are in the Kitchen. Currently available directions: south, west. What is your next instruction?\nGO: west\nYou have made a step and entered a Lobby. Currently available directions: east, south. What is your next instruction?\nGO: north\nThe move is not valid. You are still in the Lobby. Currently available directions: east, south. What is your next instruction?\nGO: east\nYou have made a step and entered a Garage. Currently available directions: south, west. What is your next instruction?\nGO: south\n...\nYou have made a step and entered a Bedroom. Currently available directions: south. What is your next instruction?\nDONE\n\nLet us start. You are in the $INITIAL_ROOM$. Currently available directions: $INITIAL_DIRECTIONS$. What is your next instruction?", "Player2_positive_answer": "You have made a step and entered $ANOTHER_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Player2_negative_answer": "The move is not valid. You are still in the $SAME_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Move_Construction": "GO:", "Stop_Construction": "DONE", "Grid_Dimension": "4", "Graph_Nodes": "['Bedroom', 'Living room', 'Dining room', 'Pantry', 'Conservatory', 'Library', 'Exercise room', 'Kitchen']", "Graph_Edges": "[('Bedroom', 'Living room'), ('Living room', 'Dining room'), ('Dining room', 'Pantry'), ('Pantry', 'Conservatory'), ('Conservatory', 'Library'), ('Conservatory', 'Exercise room'), ('Exercise room', 'Kitchen')]", "Current_Position": "Pantry", "Picture_Name": "graph_2590.png", "Directions": "[('Bedroom', ['south']), ('Living room', ['south', 'north']), ('Dining room', ['east', 'north']), ('Pantry', ['south', 'west']), ('Conservatory', ['north', 'east', 'west']), ('Library', ['east']), ('Exercise room', ['east', 'west']), ('Kitchen', ['west'])]", "Moves": "[{'node': 'Bedroom', 'node_moves': [('south', 'Living room')]}, {'node': 'Living room', 'node_moves': [('south', 'Dining room'), ('north', 'Bedroom')]}, {'node': 'Living room', 'node_moves': [('south', 'Dining room'), ('north', 'Bedroom')]}, {'node': 'Dining room', 'node_moves': [('east', 'Pantry'), ('north', 'Living room')]}, {'node': 'Dining room', 'node_moves': [('east', 'Pantry'), ('north', 'Living room')]}, {'node': 'Pantry', 'node_moves': [('south', 'Conservatory'), ('west', 'Dining room')]}, {'node': 'Pantry', 'node_moves': [('south', 'Conservatory'), ('west', 'Dining room')]}, {'node': 'Conservatory', 'node_moves': [('north', 'Pantry'), ('east', 'Exercise room'), ('west', 'Library')]}, {'node': 'Conservatory', 'node_moves': [('north', 'Pantry'), ('east', 'Exercise room'), ('west', 'Library')]}, {'node': 'Conservatory', 'node_moves': [('north', 'Pantry'), ('east', 'Exercise room'), ('west', 'Library')]}, {'node': 'Library', 'node_moves': [('east', 'Conservatory')]}, {'node': 'Exercise room', 'node_moves': [('east', 'Kitchen'), ('west', 'Conservatory')]}, {'node': 'Exercise room', 'node_moves': [('east', 'Kitchen'), ('west', 'Conservatory')]}, {'node': 'Kitchen', 'node_moves': [('west', 'Exercise room')]}]", "Cycle": "cycle_false", "Ambiguity": null, "Game_Type": "named_graph", "Loop_Reminder": false, "Loop_Reminder_Text": "It seems like we are going back and forth between two rooms. To stop exploring choose 'DONE' as our next action.", "Max_Turns_Reminder": true, "Max_Turns_Reminder_Text": "We have been exploring for a while now. To stop exploring choose 'DONE' as our next action.", "Question": "How many different $ROOM_CATEGORY$(s) did you encounter?", "First_Question_Answer": "('Dining room', 1)", "Second_Question_Answer": "('Exercise room', 1)", "Third_Question_Answer": "('Billiard room', 0)", "Question_reprompt": "Now once you have stopped the game, you need to answer some questions in this format: 'Answer: <answer>' replace <answer> with an appropriate integer."}, {"game_id": 1, "Prompt": "Please help me with the following task. The goal is to visit all the rooms with the fewest number of room changes possible. In each room, you need to decide the direction to go in. Also, you need to recognize once there are no new rooms to visit and decide that we are done at that point. Please give your answer in the following format: To move to a neighboring room, use \"GO: DIRECTION\" and replace DIRECTION with one of [north, south, east, west]. To stop the exploration, answer with \"DONE\" instead.\n\nHere is an example:\nYou are in the Kitchen. Currently available directions: south, west. What is your next instruction?\nGO: west\nYou have made a step and entered a Lobby. Currently available directions: east, south. What is your next instruction?\nGO: north\nThe move is not valid. You are still in the Lobby. Currently available directions: east, south. What is your next instruction?\nGO: east\nYou have made a step and entered a Garage. Currently available directions: south, west. What is your next instruction?\nGO: south\n...\nYou have made a step and entered a Bedroom. Currently available directions: south. What is your next instruction?\nDONE\n\nLet us start. You are in the $INITIAL_ROOM$. Currently available directions: $INITIAL_DIRECTIONS$. What is your next instruction?", "Player2_positive_answer": "You have made a step and entered $ANOTHER_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Player2_negative_answer": "The move is not valid. You are still in the $SAME_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Move_Construction": "GO:", "Stop_Construction": "DONE", "Grid_Dimension": "4", "Graph_Nodes": "['Cellar', 'Recreation room', 'Home office', 'Kitchen', 'Playroom', 'Craft room', 'Nursery', 'Closet']", "Graph_Edges": "[('Cellar', 'Recreation room'), ('Cellar', 'Home office'), ('Home office', 'Kitchen'), ('Home office', 'Playroom'), ('Playroom', 'Craft room'), ('Playroom', 'Nursery'), ('Playroom', 'Closet')]", "Current_Position": "Nursery", "Picture_Name": "graph_7464.png", "Directions": "[('Cellar', ['south', 'north']), ('Recreation room', ['south']), ('Home office', ['south', 'north', 'west']), ('Kitchen', ['north']), ('Playroom', ['south', 'north', 'east', 'west']), ('Craft room', ['north']), ('Nursery', ['east']), ('Closet', ['south'])]", "Moves": "[{'node': 'Cellar', 'node_moves': [('south', 'Home office'), ('north', 'Recreation room')]}, {'node': 'Cellar', 'node_moves': [('south', 'Home office'), ('north', 'Recreation room')]}, {'node': 'Recreation room', 'node_moves': [('south', 'Cellar')]}, {'node': 'Home office', 'node_moves': [('south', 'Kitchen'), ('north', 'Cellar'), ('west', 'Playroom')]}, {'node': 'Home office', 'node_moves': [('south', 'Kitchen'), ('north', 'Cellar'), ('west', 'Playroom')]}, {'node': 'Home office', 'node_moves': [('south', 'Kitchen'), ('north', 'Cellar'), ('west', 'Playroom')]}, {'node': 'Kitchen', 'node_moves': [('north', 'Home office')]}, {'node': 'Playroom', 'node_moves': [('south', 'Craft room'), ('north', 'Closet'), ('east', 'Home office'), ('west', 'Nursery')]}, {'node': 'Playroom', 'node_moves': [('south', 'Craft room'), ('north', 'Closet'), ('east', 'Home office'), ('west', 'Nursery')]}, {'node': 'Playroom', 'node_moves': [('south', 'Craft room'), ('north', 'Closet'), ('east', 'Home office'), ('west', 'Nursery')]}, {'node': 'Playroom', 'node_moves': [('south', 'Craft room'), ('north', 'Closet'), ('east', 'Home office'), ('west', 'Nursery')]}, {'node': 'Craft room', 'node_moves': [('north', 'Playroom')]}, {'node': 'Nursery', 'node_moves': [('east', 'Playroom')]}, {'node': 'Closet', 'node_moves': [('south', 'Playroom')]}]", "Cycle": "cycle_false", "Ambiguity": null, "Game_Type": "named_graph", "Loop_Reminder": false, "Loop_Reminder_Text": "It seems like we are going back and forth between two rooms. To stop exploring choose 'DONE' as our next action.", "Max_Turns_Reminder": true, "Max_Turns_Reminder_Text": "We have been exploring for a while now. To stop exploring choose 'DONE' as our next action.", "Question": "How many different $ROOM_CATEGORY$(s) did you encounter?", "First_Question_Answer": "('Cellar', 1)", "Second_Question_Answer": "('Home office', 1)", "Third_Question_Answer": "('Guest room', 0)", "Question_reprompt": "Now once you have stopped the game, you need to answer some questions in this format: 'Answer: <answer>' replace <answer> with an appropriate integer."}, {"game_id": 2, "Prompt": "Please help me with the following task. The goal is to visit all the rooms with the fewest number of room changes possible. In each room, you need to decide the direction to go in. Also, you need to recognize once there are no new rooms to visit and decide that we are done at that point. Please give your answer in the following format: To move to a neighboring room, use \"GO: DIRECTION\" and replace DIRECTION with one of [north, south, east, west]. To stop the exploration, answer with \"DONE\" instead.\n\nHere is an example:\nYou are in the Kitchen. Currently available directions: south, west. What is your next instruction?\nGO: west\nYou have made a step and entered a Lobby. Currently available directions: east, south. What is your next instruction?\nGO: north\nThe move is not valid. You are still in the Lobby. Currently available directions: east, south. What is your next instruction?\nGO: east\nYou have made a step and entered a Garage. Currently available directions: south, west. What is your next instruction?\nGO: south\n...\nYou have made a step and entered a Bedroom. Currently available directions: south. What is your next instruction?\nDONE\n\nLet us start. You are in the $INITIAL_ROOM$. Currently available directions: $INITIAL_DIRECTIONS$. What is your next instruction?", "Player2_positive_answer": "You have made a step and entered $ANOTHER_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Player2_negative_answer": "The move is not valid. You are still in the $SAME_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Move_Construction": "GO:", "Stop_Construction": "DONE", "Grid_Dimension": "4", "Graph_Nodes": "['Dining room', 'Foyer', 'Game room', 'Basement', 'Workshop', 'Living room', 'Balcony', 'Mudroom']", "Graph_Edges": "[('Dining room', 'Foyer'), ('Dining room', 'Basement'), ('Foyer', 'Game room'), ('Basement', 'Workshop'), ('Workshop', 'Living room'), ('Living room', 'Balcony'), ('Balcony', 'Mudroom')]", "Current_Position": "Living room", "Picture_Name": "graph_340.png", "Directions": "[('Dining room', ['south', 'west']), ('Foyer', ['south', 'east']), ('Game room', ['north']), ('Basement', ['east', 'north']), ('Workshop', ['south', 'west']), ('Living room', ['north', 'west']), ('Balcony', ['east', 'west']), ('Mudroom', ['east'])]", "Moves": "[{'node': 'Dining room', 'node_moves': [('south', 'Basement'), ('west', 'Foyer')]}, {'node': 'Dining room', 'node_moves': [('south', 'Basement'), ('west', 'Foyer')]}, {'node': 'Foyer', 'node_moves': [('south', 'Game room'), ('east', 'Dining room')]}, {'node': 'Foyer', 'node_moves': [('south', 'Game room'), ('east', 'Dining room')]}, {'node': 'Game room', 'node_moves': [('north', 'Foyer')]}, {'node': 'Basement', 'node_moves': [('east', 'Workshop'), ('north', 'Dining room')]}, {'node': 'Basement', 'node_moves': [('east', 'Workshop'), ('north', 'Dining room')]}, {'node': 'Workshop', 'node_moves': [('south', 'Living room'), ('west', 'Basement')]}, {'node': 'Workshop', 'node_moves': [('south', 'Living room'), ('west', 'Basement')]}, {'node': 'Living room', 'node_moves': [('north', 'Workshop'), ('west', 'Balcony')]}, {'node': 'Living room', 'node_moves': [('north', 'Workshop'), ('west', 'Balcony')]}, {'node': 'Balcony', 'node_moves': [('east', 'Living room'), ('west', 'Mudroom')]}, {'node': 'Balcony', 'node_moves': [('east', 'Living room'), ('west', 'Mudroom')]}, {'node': 'Mudroom', 'node_moves': [('east', 'Balcony')]}]", "Cycle": "cycle_false", "Ambiguity": null, "Game_Type": "named_graph", "Loop_Reminder": false, "Loop_Reminder_Text": "It seems like we are going back and forth between two rooms. To stop exploring choose 'DONE' as our next action.", "Max_Turns_Reminder": true, "Max_Turns_Reminder_Text": "We have been exploring for a while now. To stop exploring choose 'DONE' as our next action.", "Question": "How many different $ROOM_CATEGORY$(s) did you encounter?", "First_Question_Answer": "('Dining room', 1)", "Second_Question_Answer": "('Foyer', 1)", "Third_Question_Answer": "('Utility room', 0)", "Question_reprompt": "Now once you have stopped the game, you need to answer some questions in this format: 'Answer: <answer>' replace <answer> with an appropriate integer."}, {"game_id": 3, "Prompt": "Please help me with the following task. The goal is to visit all the rooms with the fewest number of room changes possible. In each room, you need to decide the direction to go in. Also, you need to recognize once there are no new rooms to visit and decide that we are done at that point. Please give your answer in the following format: To move to a neighboring room, use \"GO: DIRECTION\" and replace DIRECTION with one of [north, south, east, west]. To stop the exploration, answer with \"DONE\" instead.\n\nHere is an example:\nYou are in the Kitchen. Currently available directions: south, west. What is your next instruction?\nGO: west\nYou have made a step and entered a Lobby. Currently available directions: east, south. What is your next instruction?\nGO: north\nThe move is not valid. You are still in the Lobby. Currently available directions: east, south. What is your next instruction?\nGO: east\nYou have made a step and entered a Garage. Currently available directions: south, west. What is your next instruction?\nGO: south\n...\nYou have made a step and entered a Bedroom. Currently available directions: south. What is your next instruction?\nDONE\n\nLet us start. You are in the $INITIAL_ROOM$. Currently available directions: $INITIAL_DIRECTIONS$. What is your next instruction?", "Player2_positive_answer": "You have made a step and entered $ANOTHER_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Player2_negative_answer": "The move is not valid. You are still in the $SAME_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Move_Construction": "GO:", "Stop_Construction": "DONE", "Grid_Dimension": "4", "Graph_Nodes": "['Guest room', 'Game room', 'Solarium', 'Wine cellar', 'Pantry', 'Study room', 'Kitchen', 'Library']", "Graph_Edges": "[('Guest room', 'Game room'), ('Guest room', 'Solarium'), ('Solarium', 'Wine cellar'), ('Wine cellar', 'Pantry'), ('Pantry', 'Study room'), ('Pantry', 'Library'), ('Study room', 'Kitchen')]", "Current_Position": "Solarium", "Picture_Name": "graph_1933.png", "Directions": "[('Guest room', ['south', 'west']), ('Game room', ['east']), ('Solarium', ['north', 'west']), ('Wine cellar', ['east', 'west']), ('Pantry', ['north', 'east', 'west']), ('Study room', ['east', 'north']), ('Kitchen', ['south']), ('Library', ['south'])]", "Moves": "[{'node': 'Guest room', 'node_moves': [('south', 'Solarium'), ('west', 'Game room')]}, {'node': 'Guest room', 'node_moves': [('south', 'Solarium'), ('west', 'Game room')]}, {'node': 'Game room', 'node_moves': [('east', 'Guest room')]}, {'node': 'Solarium', 'node_moves': [('north', 'Guest room'), ('west', 'Wine cellar')]}, {'node': 'Solarium', 'node_moves': [('north', 'Guest room'), ('west', 'Wine cellar')]}, {'node': 'Wine cellar', 'node_moves': [('east', 'Solarium'), ('west', 'Pantry')]}, {'node': 'Wine cellar', 'node_moves': [('east', 'Solarium'), ('west', 'Pantry')]}, {'node': 'Pantry', 'node_moves': [('north', 'Library'), ('east', 'Wine cellar'), ('west', 'Study room')]}, {'node': 'Pantry', 'node_moves': [('north', 'Library'), ('east', 'Wine cellar'), ('west', 'Study room')]}, {'node': 'Pantry', 'node_moves': [('north', 'Library'), ('east', 'Wine cellar'), ('west', 'Study room')]}, {'node': 'Study room', 'node_moves': [('east', 'Pantry'), ('north', 'Kitchen')]}, {'node': 'Study room', 'node_moves': [('east', 'Pantry'), ('north', 'Kitchen')]}, {'node': 'Kitchen', 'node_moves': [('south', 'Study room')]}, {'node': 'Library', 'node_moves': [('south', 'Pantry')]}]", "Cycle": "cycle_false", "Ambiguity": null, "Game_Type": "named_graph", "Loop_Reminder": false, "Loop_Reminder_Text": "It seems like we are going back and forth between two rooms. To stop exploring choose 'DONE' as our next action.", "Max_Turns_Reminder": true, "Max_Turns_Reminder_Text": "We have been exploring for a while now. To stop exploring choose 'DONE' as our next action.", "Question": "How many different $ROOM_CATEGORY$(s) did you encounter?", "First_Question_Answer": "('Pantry', 1)", "Second_Question_Answer": "('Kitchen', 1)", "Third_Question_Answer": "('Sunroom', 0)", "Question_reprompt": "Now once you have stopped the game, you need to answer some questions in this format: 'Answer: <answer>' replace <answer> with an appropriate integer."}, {"game_id": 4, "Prompt": "Please help me with the following task. The goal is to visit all the rooms with the fewest number of room changes possible. In each room, you need to decide the direction to go in. Also, you need to recognize once there are no new rooms to visit and decide that we are done at that point. Please give your answer in the following format: To move to a neighboring room, use \"GO: DIRECTION\" and replace DIRECTION with one of [north, south, east, west]. To stop the exploration, answer with \"DONE\" instead.\n\nHere is an example:\nYou are in the Kitchen. Currently available directions: south, west. What is your next instruction?\nGO: west\nYou have made a step and entered a Lobby. Currently available directions: east, south. What is your next instruction?\nGO: north\nThe move is not valid. You are still in the Lobby. Currently available directions: east, south. What is your next instruction?\nGO: east\nYou have made a step and entered a Garage. Currently available directions: south, west. What is your next instruction?\nGO: south\n...\nYou have made a step and entered a Bedroom. Currently available directions: south. What is your next instruction?\nDONE\n\nLet us start. You are in the $INITIAL_ROOM$. Currently available directions: $INITIAL_DIRECTIONS$. What is your next instruction?", "Player2_positive_answer": "You have made a step and entered $ANOTHER_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Player2_negative_answer": "The move is not valid. You are still in the $SAME_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Move_Construction": "GO:", "Stop_Construction": "DONE", "Grid_Dimension": "4", "Graph_Nodes": "['Guest room', 'Conservatory', 'Playroom', 'Mudroom', 'Recreation room', 'Exercise room', 'Home office', 'Gallery']", "Graph_Edges": "[('Guest room', 'Conservatory'), ('Conservatory', 'Playroom'), ('Playroom', 'Mudroom'), ('Playroom', 'Recreation room'), ('Recreation room', 'Exercise room'), ('Exercise room', 'Home office'), ('Exercise room', 'Gallery')]", "Current_Position": "Home office", "Picture_Name": "graph_840.png", "Directions": "[('Guest room', ['south']), ('Conservatory', ['north', 'west']), ('Playroom', ['south', 'east', 'north']), ('Mudroom', ['south']), ('Recreation room', ['east', 'north']), ('Exercise room', ['south', 'east', 'west']), ('Home office', ['north']), ('Gallery', ['west'])]", "Moves": "[{'node': 'Guest room', 'node_moves': [('south', 'Conservatory')]}, {'node': 'Conservatory', 'node_moves': [('north', 'Guest room'), ('west', 'Playroom')]}, {'node': 'Conservatory', 'node_moves': [('north', 'Guest room'), ('west', 'Playroom')]}, {'node': 'Playroom', 'node_moves': [('south', 'Recreation room'), ('east', 'Conservatory'), ('north', 'Mudroom')]}, {'node': 'Playroom', 'node_moves': [('south', 'Recreation room'), ('east', 'Conservatory'), ('north', 'Mudroom')]}, {'node': 'Playroom', 'node_moves': [('south', 'Recreation room'), ('east', 'Conservatory'), ('north', 'Mudroom')]}, {'node': 'Mudroom', 'node_moves': [('south', 'Playroom')]}, {'node': 'Recreation room', 'node_moves': [('east', 'Exercise room'), ('north', 'Playroom')]}, {'node': 'Recreation room', 'node_moves': [('east', 'Exercise room'), ('north', 'Playroom')]}, {'node': 'Exercise room', 'node_moves': [('south', 'Home office'), ('east', 'Gallery'), ('west', 'Recreation room')]}, {'node': 'Exercise room', 'node_moves': [('south', 'Home office'), ('east', 'Gallery'), ('west', 'Recreation room')]}, {'node': 'Exercise room', 'node_moves': [('south', 'Home office'), ('east', 'Gallery'), ('west', 'Recreation room')]}, {'node': 'Home office', 'node_moves': [('north', 'Exercise room')]}, {'node': 'Gallery', 'node_moves': [('west', 'Exercise room')]}]", "Cycle": "cycle_false", "Ambiguity": null, "Game_Type": "named_graph", "Loop_Reminder": false, "Loop_Reminder_Text": "It seems like we are going back and forth between two rooms. To stop exploring choose 'DONE' as our next action.", "Max_Turns_Reminder": true, "Max_Turns_Reminder_Text": "We have been exploring for a while now. To stop exploring choose 'DONE' as our next action.", "Question": "How many different $ROOM_CATEGORY$(s) did you encounter?", "First_Question_Answer": "('Exercise room', 1)", "Second_Question_Answer": "('Home office', 1)", "Third_Question_Answer": "('Media room', 0)", "Question_reprompt": "Now once you have stopped the game, you need to answer some questions in this format: 'Answer: <answer>' replace <answer> with an appropriate integer."}, {"game_id": 5, "Prompt": "Please help me with the following task. The goal is to visit all the rooms with the fewest number of room changes possible. In each room, you need to decide the direction to go in. Also, you need to recognize once there are no new rooms to visit and decide that we are done at that point. Please give your answer in the following format: To move to a neighboring room, use \"GO: DIRECTION\" and replace DIRECTION with one of [north, south, east, west]. To stop the exploration, answer with \"DONE\" instead.\n\nHere is an example:\nYou are in the Kitchen. Currently available directions: south, west. What is your next instruction?\nGO: west\nYou have made a step and entered a Lobby. Currently available directions: east, south. What is your next instruction?\nGO: north\nThe move is not valid. You are still in the Lobby. Currently available directions: east, south. What is your next instruction?\nGO: east\nYou have made a step and entered a Garage. Currently available directions: south, west. What is your next instruction?\nGO: south\n...\nYou have made a step and entered a Bedroom. Currently available directions: south. What is your next instruction?\nDONE\n\nLet us start. You are in the $INITIAL_ROOM$. Currently available directions: $INITIAL_DIRECTIONS$. What is your next instruction?", "Player2_positive_answer": "You have made a step and entered $ANOTHER_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Player2_negative_answer": "The move is not valid. You are still in the $SAME_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Move_Construction": "GO:", "Stop_Construction": "DONE", "Grid_Dimension": "4", "Graph_Nodes": "['Sunroom', 'Workshop', 'Home office', 'Game room', 'Craft room', 'Solarium', 'Attic', 'Recreation room']", "Graph_Edges": "[('Sunroom', 'Workshop'), ('Sunroom', 'Game room'), ('Workshop', 'Home office'), ('Game room', 'Craft room'), ('Game room', 'Recreation room'), ('Craft room', 'Solarium'), ('Craft room', 'Attic')]", "Current_Position": "Attic", "Picture_Name": "graph_1874.png", "Directions": "[('Sunroom', ['south', 'west']), ('Workshop', ['south', 'north']), ('Home office', ['north']), ('Game room', ['west', 'east', 'north']), ('Craft room', ['south', 'east', 'west']), ('Solarium', ['east']), ('Attic', ['west']), ('Recreation room', ['east'])]", "Moves": "[{'node': 'Sunroom', 'node_moves': [('south', 'Workshop'), ('west', 'Game room')]}, {'node': 'Sunroom', 'node_moves': [('south', 'Workshop'), ('west', 'Game room')]}, {'node': 'Workshop', 'node_moves': [('south', 'Home office'), ('north', 'Sunroom')]}, {'node': 'Workshop', 'node_moves': [('south', 'Home office'), ('north', 'Sunroom')]}, {'node': 'Home office', 'node_moves': [('north', 'Workshop')]}, {'node': 'Game room', 'node_moves': [('west', 'Recreation room'), ('east', 'Sunroom'), ('north', 'Craft room')]}, {'node': 'Game room', 'node_moves': [('west', 'Recreation room'), ('east', 'Sunroom'), ('north', 'Craft room')]}, {'node': 'Game room', 'node_moves': [('west', 'Recreation room'), ('east', 'Sunroom'), ('north', 'Craft room')]}, {'node': 'Craft room', 'node_moves': [('south', 'Game room'), ('east', 'Attic'), ('west', 'Solarium')]}, {'node': 'Craft room', 'node_moves': [('south', 'Game room'), ('east', 'Attic'), ('west', 'Solarium')]}, {'node': 'Craft room', 'node_moves': [('south', 'Game room'), ('east', 'Attic'), ('west', 'Solarium')]}, {'node': 'Solarium', 'node_moves': [('east', 'Craft room')]}, {'node': 'Attic', 'node_moves': [('west', 'Craft room')]}, {'node': 'Recreation room', 'node_moves': [('east', 'Game room')]}]", "Cycle": "cycle_false", "Ambiguity": null, "Game_Type": "named_graph", "Loop_Reminder": false, "Loop_Reminder_Text": "It seems like we are going back and forth between two rooms. To stop exploring choose 'DONE' as our next action.", "Max_Turns_Reminder": true, "Max_Turns_Reminder_Text": "We have been exploring for a while now. To stop exploring choose 'DONE' as our next action.", "Question": "How many different $ROOM_CATEGORY$(s) did you encounter?", "First_Question_Answer": "('Home office', 1)", "Second_Question_Answer": "('Workshop', 1)", "Third_Question_Answer": "('Cellar', 0)", "Question_reprompt": "Now once you have stopped the game, you need to answer some questions in this format: 'Answer: <answer>' replace <answer> with an appropriate integer."}, {"game_id": 6, "Prompt": "Please help me with the following task. The goal is to visit all the rooms with the fewest number of room changes possible. In each room, you need to decide the direction to go in. Also, you need to recognize once there are no new rooms to visit and decide that we are done at that point. Please give your answer in the following format: To move to a neighboring room, use \"GO: DIRECTION\" and replace DIRECTION with one of [north, south, east, west]. To stop the exploration, answer with \"DONE\" instead.\n\nHere is an example:\nYou are in the Kitchen. Currently available directions: south, west. What is your next instruction?\nGO: west\nYou have made a step and entered a Lobby. Currently available directions: east, south. What is your next instruction?\nGO: north\nThe move is not valid. You are still in the Lobby. Currently available directions: east, south. What is your next instruction?\nGO: east\nYou have made a step and entered a Garage. Currently available directions: south, west. What is your next instruction?\nGO: south\n...\nYou have made a step and entered a Bedroom. Currently available directions: south. What is your next instruction?\nDONE\n\nLet us start. You are in the $INITIAL_ROOM$. Currently available directions: $INITIAL_DIRECTIONS$. What is your next instruction?", "Player2_positive_answer": "You have made a step and entered $ANOTHER_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Player2_negative_answer": "The move is not valid. You are still in the $SAME_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Move_Construction": "GO:", "Stop_Construction": "DONE", "Grid_Dimension": "4", "Graph_Nodes": "['Cellar', 'Garage', 'Balcony', 'Game room', 'Utility room', 'Solarium', 'Conservatory', 'Sunroom']", "Graph_Edges": "[('Cellar', 'Garage'), ('Garage', 'Balcony'), ('Garage', 'Utility room'), ('Balcony', 'Game room'), ('Utility room', 'Solarium'), ('Solarium', 'Conservatory'), ('Conservatory', 'Sunroom')]", "Current_Position": "Sunroom", "Picture_Name": "graph_2157.png", "Directions": "[('Cellar', ['west']), ('Garage', ['south', 'east', 'west']), ('Balcony', ['south', 'east']), ('Game room', ['north']), ('Utility room', ['east', 'north']), ('Solarium', ['east', 'west']), ('Conservatory', ['west', 'north']), ('Sunroom', ['south'])]", "Moves": "[{'node': 'Cellar', 'node_moves': [('west', 'Garage')]}, {'node': 'Garage', 'node_moves': [('south', 'Utility room'), ('east', 'Cellar'), ('west', 'Balcony')]}, {'node': 'Garage', 'node_moves': [('south', 'Utility room'), ('east', 'Cellar'), ('west', 'Balcony')]}, {'node': 'Garage', 'node_moves': [('south', 'Utility room'), ('east', 'Cellar'), ('west', 'Balcony')]}, {'node': 'Balcony', 'node_moves': [('south', 'Game room'), ('east', 'Garage')]}, {'node': 'Balcony', 'node_moves': [('south', 'Game room'), ('east', 'Garage')]}, {'node': 'Game room', 'node_moves': [('north', 'Balcony')]}, {'node': 'Utility room', 'node_moves': [('east', 'Solarium'), ('north', 'Garage')]}, {'node': 'Utility room', 'node_moves': [('east', 'Solarium'), ('north', 'Garage')]}, {'node': 'Solarium', 'node_moves': [('east', 'Conservatory'), ('west', 'Utility room')]}, {'node': 'Solarium', 'node_moves': [('east', 'Conservatory'), ('west', 'Utility room')]}, {'node': 'Conservatory', 'node_moves': [('west', 'Solarium'), ('north', 'Sunroom')]}, {'node': 'Conservatory', 'node_moves': [('west', 'Solarium'), ('north', 'Sunroom')]}, {'node': 'Sunroom', 'node_moves': [('south', 'Conservatory')]}]", "Cycle": "cycle_false", "Ambiguity": null, "Game_Type": "named_graph", "Loop_Reminder": false, "Loop_Reminder_Text": "It seems like we are going back and forth between two rooms. To stop exploring choose 'DONE' as our next action.", "Max_Turns_Reminder": true, "Max_Turns_Reminder_Text": "We have been exploring for a while now. To stop exploring choose 'DONE' as our next action.", "Question": "How many different $ROOM_CATEGORY$(s) did you encounter?", "First_Question_Answer": "('Cellar', 1)", "Second_Question_Answer": "('Game room', 1)", "Third_Question_Answer": "('Home gym', 0)", "Question_reprompt": "Now once you have stopped the game, you need to answer some questions in this format: 'Answer: <answer>' replace <answer> with an appropriate integer."}, {"game_id": 7, "Prompt": "Please help me with the following task. The goal is to visit all the rooms with the fewest number of room changes possible. In each room, you need to decide the direction to go in. Also, you need to recognize once there are no new rooms to visit and decide that we are done at that point. Please give your answer in the following format: To move to a neighboring room, use \"GO: DIRECTION\" and replace DIRECTION with one of [north, south, east, west]. To stop the exploration, answer with \"DONE\" instead.\n\nHere is an example:\nYou are in the Kitchen. Currently available directions: south, west. What is your next instruction?\nGO: west\nYou have made a step and entered a Lobby. Currently available directions: east, south. What is your next instruction?\nGO: north\nThe move is not valid. You are still in the Lobby. Currently available directions: east, south. What is your next instruction?\nGO: east\nYou have made a step and entered a Garage. Currently available directions: south, west. What is your next instruction?\nGO: south\n...\nYou have made a step and entered a Bedroom. Currently available directions: south. What is your next instruction?\nDONE\n\nLet us start. You are in the $INITIAL_ROOM$. Currently available directions: $INITIAL_DIRECTIONS$. What is your next instruction?", "Player2_positive_answer": "You have made a step and entered $ANOTHER_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Player2_negative_answer": "The move is not valid. You are still in the $SAME_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Move_Construction": "GO:", "Stop_Construction": "DONE", "Grid_Dimension": "4", "Graph_Nodes": "['Study room', 'Guest room', 'Living room', 'Closet', 'Bedroom', 'Bar', 'Home gym', 'Mudroom']", "Graph_Edges": "[('Study room', 'Guest room'), ('Study room', 'Bedroom'), ('Guest room', 'Living room'), ('Living room', 'Closet'), ('Bedroom', 'Bar'), ('Bar', 'Home gym'), ('Home gym', 'Mudroom')]", "Current_Position": "Bedroom", "Picture_Name": "graph_1134.png", "Directions": "[('Study room', ['east', 'west']), ('Guest room', ['west', 'north']), ('Living room', ['south', 'north']), ('Closet', ['south']), ('Bedroom', ['south', 'east']), ('Bar', ['north', 'west']), ('Home gym', ['east', 'north']), ('Mudroom', ['south'])]", "Moves": "[{'node': 'Study room', 'node_moves': [('east', 'Guest room'), ('west', 'Bedroom')]}, {'node': 'Study room', 'node_moves': [('east', 'Guest room'), ('west', 'Bedroom')]}, {'node': 'Guest room', 'node_moves': [('west', 'Study room'), ('north', 'Living room')]}, {'node': 'Guest room', 'node_moves': [('west', 'Study room'), ('north', 'Living room')]}, {'node': 'Living room', 'node_moves': [('south', 'Guest room'), ('north', 'Closet')]}, {'node': 'Living room', 'node_moves': [('south', 'Guest room'), ('north', 'Closet')]}, {'node': 'Closet', 'node_moves': [('south', 'Living room')]}, {'node': 'Bedroom', 'node_moves': [('south', 'Bar'), ('east', 'Study room')]}, {'node': 'Bedroom', 'node_moves': [('south', 'Bar'), ('east', 'Study room')]}, {'node': 'Bar', 'node_moves': [('north', 'Bedroom'), ('west', 'Home gym')]}, {'node': 'Bar', 'node_moves': [('north', 'Bedroom'), ('west', 'Home gym')]}, {'node': 'Home gym', 'node_moves': [('east', 'Bar'), ('north', 'Mudroom')]}, {'node': 'Home gym', 'node_moves': [('east', 'Bar'), ('north', 'Mudroom')]}, {'node': 'Mudroom', 'node_moves': [('south', 'Home gym')]}]", "Cycle": "cycle_false", "Ambiguity": null, "Game_Type": "named_graph", "Loop_Reminder": false, "Loop_Reminder_Text": "It seems like we are going back and forth between two rooms. To stop exploring choose 'DONE' as our next action.", "Max_Turns_Reminder": true, "Max_Turns_Reminder_Text": "We have been exploring for a while now. To stop exploring choose 'DONE' as our next action.", "Question": "How many different $ROOM_CATEGORY$(s) did you encounter?", "First_Question_Answer": "('Closet', 1)", "Second_Question_Answer": "('Living room', 1)", "Third_Question_Answer": "('Balcony', 0)", "Question_reprompt": "Now once you have stopped the game, you need to answer some questions in this format: 'Answer: <answer>' replace <answer> with an appropriate integer."}, {"game_id": 8, "Prompt": "Please help me with the following task. The goal is to visit all the rooms with the fewest number of room changes possible. In each room, you need to decide the direction to go in. Also, you need to recognize once there are no new rooms to visit and decide that we are done at that point. Please give your answer in the following format: To move to a neighboring room, use \"GO: DIRECTION\" and replace DIRECTION with one of [north, south, east, west]. To stop the exploration, answer with \"DONE\" instead.\n\nHere is an example:\nYou are in the Kitchen. Currently available directions: south, west. What is your next instruction?\nGO: west\nYou have made a step and entered a Lobby. Currently available directions: east, south. What is your next instruction?\nGO: north\nThe move is not valid. You are still in the Lobby. Currently available directions: east, south. What is your next instruction?\nGO: east\nYou have made a step and entered a Garage. Currently available directions: south, west. What is your next instruction?\nGO: south\n...\nYou have made a step and entered a Bedroom. Currently available directions: south. What is your next instruction?\nDONE\n\nLet us start. You are in the $INITIAL_ROOM$. Currently available directions: $INITIAL_DIRECTIONS$. What is your next instruction?", "Player2_positive_answer": "You have made a step and entered $ANOTHER_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Player2_negative_answer": "The move is not valid. You are still in the $SAME_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Move_Construction": "GO:", "Stop_Construction": "DONE", "Grid_Dimension": "4", "Graph_Nodes": "['Laundry room', 'Home gym', 'Exercise room', 'Home theater', 'Wine cellar', 'Study room', 'Library', 'Kitchen']", "Graph_Edges": "[('Laundry room', 'Home gym'), ('Laundry room', 'Exercise room'), ('Laundry room', 'Home theater'), ('Home theater', 'Wine cellar'), ('Wine cellar', 'Study room'), ('Study room', 'Library'), ('Library', 'Kitchen')]", "Current_Position": "Home gym", "Picture_Name": "graph_5446.png", "Directions": "[('Laundry room', ['south', 'north', 'west']), ('Home gym', ['north']), ('Exercise room', ['east']), ('Home theater', ['south', 'north']), ('Wine cellar', ['south', 'west']), ('Study room', ['east', 'west']), ('Library', ['south', 'east']), ('Kitchen', ['north'])]", "Moves": "[{'node': 'Laundry room', 'node_moves': [('south', 'Home gym'), ('north', 'Home theater'), ('west', 'Exercise room')]}, {'node': 'Laundry room', 'node_moves': [('south', 'Home gym'), ('north', 'Home theater'), ('west', 'Exercise room')]}, {'node': 'Laundry room', 'node_moves': [('south', 'Home gym'), ('north', 'Home theater'), ('west', 'Exercise room')]}, {'node': 'Home gym', 'node_moves': [('north', 'Laundry room')]}, {'node': 'Exercise room', 'node_moves': [('east', 'Laundry room')]}, {'node': 'Home theater', 'node_moves': [('south', 'Laundry room'), ('north', 'Wine cellar')]}, {'node': 'Home theater', 'node_moves': [('south', 'Laundry room'), ('north', 'Wine cellar')]}, {'node': 'Wine cellar', 'node_moves': [('south', 'Home theater'), ('west', 'Study room')]}, {'node': 'Wine cellar', 'node_moves': [('south', 'Home theater'), ('west', 'Study room')]}, {'node': 'Study room', 'node_moves': [('east', 'Wine cellar'), ('west', 'Library')]}, {'node': 'Study room', 'node_moves': [('east', 'Wine cellar'), ('west', 'Library')]}, {'node': 'Library', 'node_moves': [('south', 'Kitchen'), ('east', 'Study room')]}, {'node': 'Library', 'node_moves': [('south', 'Kitchen'), ('east', 'Study room')]}, {'node': 'Kitchen', 'node_moves': [('north', 'Library')]}]", "Cycle": "cycle_false", "Ambiguity": null, "Game_Type": "named_graph", "Loop_Reminder": false, "Loop_Reminder_Text": "It seems like we are going back and forth between two rooms. To stop exploring choose 'DONE' as our next action.", "Max_Turns_Reminder": true, "Max_Turns_Reminder_Text": "We have been exploring for a while now. To stop exploring choose 'DONE' as our next action.", "Question": "How many different $ROOM_CATEGORY$(s) did you encounter?", "First_Question_Answer": "('Exercise room', 1)", "Second_Question_Answer": "('Home theater', 1)", "Third_Question_Answer": "('Conservatory', 0)", "Question_reprompt": "Now once you have stopped the game, you need to answer some questions in this format: 'Answer: <answer>' replace <answer> with an appropriate integer."}, {"game_id": 9, "Prompt": "Please help me with the following task. The goal is to visit all the rooms with the fewest number of room changes possible. In each room, you need to decide the direction to go in. Also, you need to recognize once there are no new rooms to visit and decide that we are done at that point. Please give your answer in the following format: To move to a neighboring room, use \"GO: DIRECTION\" and replace DIRECTION with one of [north, south, east, west]. To stop the exploration, answer with \"DONE\" instead.\n\nHere is an example:\nYou are in the Kitchen. Currently available directions: south, west. What is your next instruction?\nGO: west\nYou have made a step and entered a Lobby. Currently available directions: east, south. What is your next instruction?\nGO: north\nThe move is not valid. You are still in the Lobby. Currently available directions: east, south. What is your next instruction?\nGO: east\nYou have made a step and entered a Garage. Currently available directions: south, west. What is your next instruction?\nGO: south\n...\nYou have made a step and entered a Bedroom. Currently available directions: south. What is your next instruction?\nDONE\n\nLet us start. You are in the $INITIAL_ROOM$. Currently available directions: $INITIAL_DIRECTIONS$. What is your next instruction?", "Player2_positive_answer": "You have made a step and entered $ANOTHER_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Player2_negative_answer": "The move is not valid. You are still in the $SAME_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Move_Construction": "GO:", "Stop_Construction": "DONE", "Grid_Dimension": "4", "Graph_Nodes": "['Laundry room', 'Recreation room', 'Workshop', 'Dining room', 'Playroom', 'Basement', 'Guest room', 'Study room']", "Graph_Edges": "[('Laundry room', 'Recreation room'), ('Recreation room', 'Workshop'), ('Recreation room', 'Dining room'), ('Workshop', 'Playroom'), ('Playroom', 'Basement'), ('Basement', 'Guest room'), ('Guest room', 'Study room')]", "Current_Position": "Dining room", "Picture_Name": "graph_3054.png", "Directions": "[('Laundry room', ['south']), ('Recreation room', ['south', 'north', 'east']), ('Workshop', ['east', 'north']), ('Dining room', ['west']), ('Playroom', ['east', 'west']), ('Basement', ['west', 'north']), ('Guest room', ['south', 'east']), ('Study room', ['west'])]", "Moves": "[{'node': 'Laundry room', 'node_moves': [('south', 'Recreation room')]}, {'node': 'Recreation room', 'node_moves': [('south', 'Workshop'), ('north', 'Laundry room'), ('east', 'Dining room')]}, {'node': 'Recreation room', 'node_moves': [('south', 'Workshop'), ('north', 'Laundry room'), ('east', 'Dining room')]}, {'node': 'Recreation room', 'node_moves': [('south', 'Workshop'), ('north', 'Laundry room'), ('east', 'Dining room')]}, {'node': 'Workshop', 'node_moves': [('east', 'Playroom'), ('north', 'Recreation room')]}, {'node': 'Workshop', 'node_moves': [('east', 'Playroom'), ('north', 'Recreation room')]}, {'node': 'Dining room', 'node_moves': [('west', 'Recreation room')]}, {'node': 'Playroom', 'node_moves': [('east', 'Basement'), ('west', 'Workshop')]}, {'node': 'Playroom', 'node_moves': [('east', 'Basement'), ('west', 'Workshop')]}, {'node': 'Basement', 'node_moves': [('west', 'Playroom'), ('north', 'Guest room')]}, {'node': 'Basement', 'node_moves': [('west', 'Playroom'), ('north', 'Guest room')]}, {'node': 'Guest room', 'node_moves': [('south', 'Basement'), ('east', 'Study room')]}, {'node': 'Guest room', 'node_moves': [('south', 'Basement'), ('east', 'Study room')]}, {'node': 'Study room', 'node_moves': [('west', 'Guest room')]}]", "Cycle": "cycle_false", "Ambiguity": null, "Game_Type": "named_graph", "Loop_Reminder": false, "Loop_Reminder_Text": "It seems like we are going back and forth between two rooms. To stop exploring choose 'DONE' as our next action.", "Max_Turns_Reminder": true, "Max_Turns_Reminder_Text": "We have been exploring for a while now. To stop exploring choose 'DONE' as our next action.", "Question": "How many different $ROOM_CATEGORY$(s) did you encounter?", "First_Question_Answer": "('Dining room', 1)", "Second_Question_Answer": "('Workshop', 1)", "Third_Question_Answer": "('Garage', 0)", "Question_reprompt": "Now once you have stopped the game, you need to answer some questions in this format: 'Answer: <answer>' replace <answer> with an appropriate integer."}]}, {"name": "limited", "game_instances": [{"game_id": 10, "Prompt": "Please help me with the following task. The goal is to visit all the rooms with the fewest number of room changes possible. In each room, you need to decide the direction to go in. Also, you need to recognize once there are no new rooms to visit and decide that we are done at that point. Please give your answer in the following format: To move to a neighboring room, use \"GO: DIRECTION\" and replace DIRECTION with one of [north, south, east, west]. To stop the exploration, answer with \"DONE\" instead.\n\nHere is an example:\nYou are in the Kitchen. Currently available directions: south, west. What is your next instruction?\nGO: west\nYou have made a step and entered a Lobby. Currently available directions: east, south. What is your next instruction?\nGO: north\nThe move is not valid. You are still in the Lobby. Currently available directions: east, south. What is your next instruction?\nGO: east\nYou have made a step and entered a Garage. Currently available directions: south, west. What is your next instruction?\nGO: south\n...\nYou have made a step and entered a Bedroom. Currently available directions: south. What is your next instruction?\nDONE\n\nLet us start. You are in the $INITIAL_ROOM$. Currently available directions: $INITIAL_DIRECTIONS$. What is your next instruction?", "Player2_positive_answer": "You have made a step and entered $ANOTHER_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Player2_negative_answer": "The move is not valid. You are still in the $SAME_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Move_Construction": "GO:", "Stop_Construction": "DONE", "Grid_Dimension": "4", "Graph_Nodes": "['Library_(0, 2)', 'Recreation room_(1, 2)', 'Wine cellar_(1, 1)', 'Studio_(2, 2)', 'Exercise room_(2, 1)', 'Sauna_(2, 0)', 'Wine cellar_(3, 0)', 'Music room_(3, 1)']", "Graph_Edges": "[('Library_(0, 2)', 'Recreation room_(1, 2)'), ('Recreation room_(1, 2)', 'Wine cellar_(1, 1)'), ('Recreation room_(1, 2)', 'Studio_(2, 2)'), ('Studio_(2, 2)', 'Exercise room_(2, 1)'), ('Exercise room_(2, 1)', 'Sauna_(2, 0)'), ('Exercise room_(2, 1)', 'Music room_(3, 1)'), ('Sauna_(2, 0)', 'Wine cellar_(3, 0)')]", "Current_Position": "Sauna_(2, 0)", "Picture_Name": "graph_8023.png", "Directions": "[('Library_(0, 2)', ['east']), ('Recreation room_(1, 2)', ['south', 'east', 'west']), ('Wine cellar_(1, 1)', ['north']), ('Studio_(2, 2)', ['south', 'west']), ('Exercise room_(2, 1)', ['south', 'east', 'north']), ('Sauna_(2, 0)', ['east', 'north']), ('Wine cellar_(3, 0)', ['west']), ('Music room_(3, 1)', ['west'])]", "Moves": "[{'node': 'Library_(0, 2)', 'node_moves': [('east', 'Recreation room_(1, 2)')]}, {'node': 'Recreation room_(1, 2)', 'node_moves': [('south', 'Wine cellar_(1, 1)'), ('east', 'Studio_(2, 2)'), ('west', 'Library_(0, 2)')]}, {'node': 'Recreation room_(1, 2)', 'node_moves': [('south', 'Wine cellar_(1, 1)'), ('east', 'Studio_(2, 2)'), ('west', 'Library_(0, 2)')]}, {'node': 'Recreation room_(1, 2)', 'node_moves': [('south', 'Wine cellar_(1, 1)'), ('east', 'Studio_(2, 2)'), ('west', 'Library_(0, 2)')]}, {'node': 'Wine cellar_(1, 1)', 'node_moves': [('north', 'Recreation room_(1, 2)')]}, {'node': 'Studio_(2, 2)', 'node_moves': [('south', 'Exercise room_(2, 1)'), ('west', 'Recreation room_(1, 2)')]}, {'node': 'Studio_(2, 2)', 'node_moves': [('south', 'Exercise room_(2, 1)'), ('west', 'Recreation room_(1, 2)')]}, {'node': 'Exercise room_(2, 1)', 'node_moves': [('south', 'Sauna_(2, 0)'), ('east', 'Music room_(3, 1)'), ('north', 'Studio_(2, 2)')]}, {'node': 'Exercise room_(2, 1)', 'node_moves': [('south', 'Sauna_(2, 0)'), ('east', 'Music room_(3, 1)'), ('north', 'Studio_(2, 2)')]}, {'node': 'Exercise room_(2, 1)', 'node_moves': [('south', 'Sauna_(2, 0)'), ('east', 'Music room_(3, 1)'), ('north', 'Studio_(2, 2)')]}, {'node': 'Sauna_(2, 0)', 'node_moves': [('east', 'Wine cellar_(3, 0)'), ('north', 'Exercise room_(2, 1)')]}, {'node': 'Sauna_(2, 0)', 'node_moves': [('east', 'Wine cellar_(3, 0)'), ('north', 'Exercise room_(2, 1)')]}, {'node': 'Wine cellar_(3, 0)', 'node_moves': [('west', 'Sauna_(2, 0)')]}, {'node': 'Music room_(3, 1)', 'node_moves': [('west', 'Exercise room_(2, 1)')]}]", "Cycle": "cycle_false", "Ambiguity": [1, 2], "Game_Type": "named_graph", "Loop_Reminder": false, "Loop_Reminder_Text": "It seems like we are going back and forth between two rooms. To stop exploring choose 'DONE' as our next action.", "Max_Turns_Reminder": true, "Max_Turns_Reminder_Text": "We have been exploring for a while now. To stop exploring choose 'DONE' as our next action.", "Question": "How many different $ROOM_CATEGORY$(s) did you encounter?", "First_Question_Answer": "('Wine cellar', 2)", "Second_Question_Answer": "('Exercise room', 1)", "Third_Question_Answer": "('Bar', 0)", "Question_reprompt": "Now once you have stopped the game, you need to answer some questions in this format: 'Answer: <answer>' replace <answer> with an appropriate integer."}, {"game_id": 11, "Prompt": "Please help me with the following task. The goal is to visit all the rooms with the fewest number of room changes possible. In each room, you need to decide the direction to go in. Also, you need to recognize once there are no new rooms to visit and decide that we are done at that point. Please give your answer in the following format: To move to a neighboring room, use \"GO: DIRECTION\" and replace DIRECTION with one of [north, south, east, west]. To stop the exploration, answer with \"DONE\" instead.\n\nHere is an example:\nYou are in the Kitchen. Currently available directions: south, west. What is your next instruction?\nGO: west\nYou have made a step and entered a Lobby. Currently available directions: east, south. What is your next instruction?\nGO: north\nThe move is not valid. You are still in the Lobby. Currently available directions: east, south. What is your next instruction?\nGO: east\nYou have made a step and entered a Garage. Currently available directions: south, west. What is your next instruction?\nGO: south\n...\nYou have made a step and entered a Bedroom. Currently available directions: south. What is your next instruction?\nDONE\n\nLet us start. You are in the $INITIAL_ROOM$. Currently available directions: $INITIAL_DIRECTIONS$. What is your next instruction?", "Player2_positive_answer": "You have made a step and entered $ANOTHER_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Player2_negative_answer": "The move is not valid. You are still in the $SAME_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Move_Construction": "GO:", "Stop_Construction": "DONE", "Grid_Dimension": "4", "Graph_Nodes": "['Recreation room_(0, 3)', 'Utility room_(0, 2)', 'Studio_(1, 2)', 'Dining room_(1, 1)', 'Utility room_(2, 1)', 'Mudroom_(1, 0)', 'Dining room_(0, 0)', 'Living room_(0, 1)']", "Graph_Edges": "[('Recreation room_(0, 3)', 'Utility room_(0, 2)'), ('Utility room_(0, 2)', 'Studio_(1, 2)'), ('Studio_(1, 2)', 'Dining room_(1, 1)'), ('Dining room_(1, 1)', 'Utility room_(2, 1)'), ('Dining room_(1, 1)', 'Mudroom_(1, 0)'), ('Mudroom_(1, 0)', 'Dining room_(0, 0)'), ('Dining room_(0, 0)', 'Living room_(0, 1)')]", "Current_Position": "Living room_(0, 1)", "Picture_Name": "graph_1285.png", "Directions": "[('Recreation room_(0, 3)', ['south']), ('Utility room_(0, 2)', ['east', 'north']), ('Studio_(1, 2)', ['south', 'west']), ('Dining room_(1, 1)', ['south', 'east', 'north']), ('Utility room_(2, 1)', ['west']), ('Mudroom_(1, 0)', ['north', 'west']), ('Dining room_(0, 0)', ['east', 'north']), ('Living room_(0, 1)', ['south'])]", "Moves": "[{'node': 'Recreation room_(0, 3)', 'node_moves': [('south', 'Utility room_(0, 2)')]}, {'node': 'Utility room_(0, 2)', 'node_moves': [('east', 'Studio_(1, 2)'), ('north', 'Recreation room_(0, 3)')]}, {'node': 'Utility room_(0, 2)', 'node_moves': [('east', 'Studio_(1, 2)'), ('north', 'Recreation room_(0, 3)')]}, {'node': 'Studio_(1, 2)', 'node_moves': [('south', 'Dining room_(1, 1)'), ('west', 'Utility room_(0, 2)')]}, {'node': 'Studio_(1, 2)', 'node_moves': [('south', 'Dining room_(1, 1)'), ('west', 'Utility room_(0, 2)')]}, {'node': 'Dining room_(1, 1)', 'node_moves': [('south', 'Mudroom_(1, 0)'), ('east', 'Utility room_(2, 1)'), ('north', 'Studio_(1, 2)')]}, {'node': 'Dining room_(1, 1)', 'node_moves': [('south', 'Mudroom_(1, 0)'), ('east', 'Utility room_(2, 1)'), ('north', 'Studio_(1, 2)')]}, {'node': 'Dining room_(1, 1)', 'node_moves': [('south', 'Mudroom_(1, 0)'), ('east', 'Utility room_(2, 1)'), ('north', 'Studio_(1, 2)')]}, {'node': 'Utility room_(2, 1)', 'node_moves': [('west', 'Dining room_(1, 1)')]}, {'node': 'Mudroom_(1, 0)', 'node_moves': [('north', 'Dining room_(1, 1)'), ('west', 'Dining room_(0, 0)')]}, {'node': 'Mudroom_(1, 0)', 'node_moves': [('north', 'Dining room_(1, 1)'), ('west', 'Dining room_(0, 0)')]}, {'node': 'Dining room_(0, 0)', 'node_moves': [('east', 'Mudroom_(1, 0)'), ('north', 'Living room_(0, 1)')]}, {'node': 'Dining room_(0, 0)', 'node_moves': [('east', 'Mudroom_(1, 0)'), ('north', 'Living room_(0, 1)')]}, {'node': 'Living room_(0, 1)', 'node_moves': [('south', 'Dining room_(0, 0)')]}]", "Cycle": "cycle_false", "Ambiguity": [2, 2], "Game_Type": "named_graph", "Loop_Reminder": false, "Loop_Reminder_Text": "It seems like we are going back and forth between two rooms. To stop exploring choose 'DONE' as our next action.", "Max_Turns_Reminder": true, "Max_Turns_Reminder_Text": "We have been exploring for a while now. To stop exploring choose 'DONE' as our next action.", "Question": "How many different $ROOM_CATEGORY$(s) did you encounter?", "First_Question_Answer": "('Dining room', 2)", "Second_Question_Answer": "('Utility room', 2)", "Third_Question_Answer": "('Playroom', 0)", "Question_reprompt": "Now once you have stopped the game, you need to answer some questions in this format: 'Answer: <answer>' replace <answer> with an appropriate integer."}, {"game_id": 12, "Prompt": "Please help me with the following task. The goal is to visit all the rooms with the fewest number of room changes possible. In each room, you need to decide the direction to go in. Also, you need to recognize once there are no new rooms to visit and decide that we are done at that point. Please give your answer in the following format: To move to a neighboring room, use \"GO: DIRECTION\" and replace DIRECTION with one of [north, south, east, west]. To stop the exploration, answer with \"DONE\" instead.\n\nHere is an example:\nYou are in the Kitchen. Currently available directions: south, west. What is your next instruction?\nGO: west\nYou have made a step and entered a Lobby. Currently available directions: east, south. What is your next instruction?\nGO: north\nThe move is not valid. You are still in the Lobby. Currently available directions: east, south. What is your next instruction?\nGO: east\nYou have made a step and entered a Garage. Currently available directions: south, west. What is your next instruction?\nGO: south\n...\nYou have made a step and entered a Bedroom. Currently available directions: south. What is your next instruction?\nDONE\n\nLet us start. You are in the $INITIAL_ROOM$. Currently available directions: $INITIAL_DIRECTIONS$. What is your next instruction?", "Player2_positive_answer": "You have made a step and entered $ANOTHER_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Player2_negative_answer": "The move is not valid. You are still in the $SAME_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Move_Construction": "GO:", "Stop_Construction": "DONE", "Grid_Dimension": "4", "Graph_Nodes": "['Pantry_(2, 2)', 'Recreation room_(3, 2)', 'Living room_(2, 1)', 'Media room_(2, 0)', 'Sauna_(1, 0)', 'Pantry_(0, 0)', 'Home theater_(0, 1)', 'Studio_(1, 1)']", "Graph_Edges": "[('Pantry_(2, 2)', 'Recreation room_(3, 2)'), ('Pantry_(2, 2)', 'Living room_(2, 1)'), ('Living room_(2, 1)', 'Media room_(2, 0)'), ('Media room_(2, 0)', 'Sauna_(1, 0)'), ('Sauna_(1, 0)', 'Pantry_(0, 0)'), ('Pantry_(0, 0)', 'Home theater_(0, 1)'), ('Home theater_(0, 1)', 'Studio_(1, 1)')]", "Current_Position": "Home theater_(0, 1)", "Picture_Name": "graph_2321.png", "Directions": "[('Pantry_(2, 2)', ['south', 'east']), ('Recreation room_(3, 2)', ['west']), ('Living room_(2, 1)', ['south', 'north']), ('Media room_(2, 0)', ['north', 'west']), ('Sauna_(1, 0)', ['east', 'west']), ('Pantry_(0, 0)', ['east', 'north']), ('Home theater_(0, 1)', ['south', 'east']), ('Studio_(1, 1)', ['west'])]", "Moves": "[{'node': 'Pantry_(2, 2)', 'node_moves': [('south', 'Living room_(2, 1)'), ('east', 'Recreation room_(3, 2)')]}, {'node': 'Pantry_(2, 2)', 'node_moves': [('south', 'Living room_(2, 1)'), ('east', 'Recreation room_(3, 2)')]}, {'node': 'Recreation room_(3, 2)', 'node_moves': [('west', 'Pantry_(2, 2)')]}, {'node': 'Living room_(2, 1)', 'node_moves': [('south', 'Media room_(2, 0)'), ('north', 'Pantry_(2, 2)')]}, {'node': 'Living room_(2, 1)', 'node_moves': [('south', 'Media room_(2, 0)'), ('north', 'Pantry_(2, 2)')]}, {'node': 'Media room_(2, 0)', 'node_moves': [('north', 'Living room_(2, 1)'), ('west', 'Sauna_(1, 0)')]}, {'node': 'Media room_(2, 0)', 'node_moves': [('north', 'Living room_(2, 1)'), ('west', 'Sauna_(1, 0)')]}, {'node': 'Sauna_(1, 0)', 'node_moves': [('east', 'Media room_(2, 0)'), ('west', 'Pantry_(0, 0)')]}, {'node': 'Sauna_(1, 0)', 'node_moves': [('east', 'Media room_(2, 0)'), ('west', 'Pantry_(0, 0)')]}, {'node': 'Pantry_(0, 0)', 'node_moves': [('east', 'Sauna_(1, 0)'), ('north', 'Home theater_(0, 1)')]}, {'node': 'Pantry_(0, 0)', 'node_moves': [('east', 'Sauna_(1, 0)'), ('north', 'Home theater_(0, 1)')]}, {'node': 'Home theater_(0, 1)', 'node_moves': [('south', 'Pantry_(0, 0)'), ('east', 'Studio_(1, 1)')]}, {'node': 'Home theater_(0, 1)', 'node_moves': [('south', 'Pantry_(0, 0)'), ('east', 'Studio_(1, 1)')]}, {'node': 'Studio_(1, 1)', 'node_moves': [('west', 'Home theater_(0, 1)')]}]", "Cycle": "cycle_false", "Ambiguity": [1, 2], "Game_Type": "named_graph", "Loop_Reminder": false, "Loop_Reminder_Text": "It seems like we are going back and forth between two rooms. To stop exploring choose 'DONE' as our next action.", "Max_Turns_Reminder": true, "Max_Turns_Reminder_Text": "We have been exploring for a while now. To stop exploring choose 'DONE' as our next action.", "Question": "How many different $ROOM_CATEGORY$(s) did you encounter?", "First_Question_Answer": "('Pantry', 2)", "Second_Question_Answer": "('Home theater', 1)", "Third_Question_Answer": "('Wine cellar', 0)", "Question_reprompt": "Now once you have stopped the game, you need to answer some questions in this format: 'Answer: <answer>' replace <answer> with an appropriate integer."}, {"game_id": 13, "Prompt": "Please help me with the following task. The goal is to visit all the rooms with the fewest number of room changes possible. In each room, you need to decide the direction to go in. Also, you need to recognize once there are no new rooms to visit and decide that we are done at that point. Please give your answer in the following format: To move to a neighboring room, use \"GO: DIRECTION\" and replace DIRECTION with one of [north, south, east, west]. To stop the exploration, answer with \"DONE\" instead.\n\nHere is an example:\nYou are in the Kitchen. Currently available directions: south, west. What is your next instruction?\nGO: west\nYou have made a step and entered a Lobby. Currently available directions: east, south. What is your next instruction?\nGO: north\nThe move is not valid. You are still in the Lobby. Currently available directions: east, south. What is your next instruction?\nGO: east\nYou have made a step and entered a Garage. Currently available directions: south, west. What is your next instruction?\nGO: south\n...\nYou have made a step and entered a Bedroom. Currently available directions: south. What is your next instruction?\nDONE\n\nLet us start. You are in the $INITIAL_ROOM$. Currently available directions: $INITIAL_DIRECTIONS$. What is your next instruction?", "Player2_positive_answer": "You have made a step and entered $ANOTHER_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Player2_negative_answer": "The move is not valid. You are still in the $SAME_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Move_Construction": "GO:", "Stop_Construction": "DONE", "Grid_Dimension": "4", "Graph_Nodes": "['Wine cellar_(3, 0)', 'Game room_(3, 1)', 'Foyer_(2, 1)', 'Media room_(2, 2)', 'Pantry_(2, 0)', 'Bar_(1, 0)', 'Wine cellar_(1, 1)', 'Basement_(1, 2)']", "Graph_Edges": "[('Wine cellar_(3, 0)', 'Game room_(3, 1)'), ('Game room_(3, 1)', 'Foyer_(2, 1)'), ('Foyer_(2, 1)', 'Media room_(2, 2)'), ('Foyer_(2, 1)', 'Pantry_(2, 0)'), ('Pantry_(2, 0)', 'Bar_(1, 0)'), ('Bar_(1, 0)', 'Wine cellar_(1, 1)'), ('Wine cellar_(1, 1)', 'Basement_(1, 2)')]", "Current_Position": "Media room_(2, 2)", "Picture_Name": "graph_1485.png", "Directions": "[('Wine cellar_(3, 0)', ['north']), ('Game room_(3, 1)', ['south', 'west']), ('Foyer_(2, 1)', ['south', 'north', 'east']), ('Media room_(2, 2)', ['south']), ('Pantry_(2, 0)', ['north', 'west']), ('Bar_(1, 0)', ['east', 'north']), ('Wine cellar_(1, 1)', ['south', 'north']), ('Basement_(1, 2)', ['south'])]", "Moves": "[{'node': 'Wine cellar_(3, 0)', 'node_moves': [('north', 'Game room_(3, 1)')]}, {'node': 'Game room_(3, 1)', 'node_moves': [('south', 'Wine cellar_(3, 0)'), ('west', 'Foyer_(2, 1)')]}, {'node': 'Game room_(3, 1)', 'node_moves': [('south', 'Wine cellar_(3, 0)'), ('west', 'Foyer_(2, 1)')]}, {'node': 'Foyer_(2, 1)', 'node_moves': [('south', 'Pantry_(2, 0)'), ('north', 'Media room_(2, 2)'), ('east', 'Game room_(3, 1)')]}, {'node': 'Foyer_(2, 1)', 'node_moves': [('south', 'Pantry_(2, 0)'), ('north', 'Media room_(2, 2)'), ('east', 'Game room_(3, 1)')]}, {'node': 'Foyer_(2, 1)', 'node_moves': [('south', 'Pantry_(2, 0)'), ('north', 'Media room_(2, 2)'), ('east', 'Game room_(3, 1)')]}, {'node': 'Media room_(2, 2)', 'node_moves': [('south', 'Foyer_(2, 1)')]}, {'node': 'Pantry_(2, 0)', 'node_moves': [('north', 'Foyer_(2, 1)'), ('west', 'Bar_(1, 0)')]}, {'node': 'Pantry_(2, 0)', 'node_moves': [('north', 'Foyer_(2, 1)'), ('west', 'Bar_(1, 0)')]}, {'node': 'Bar_(1, 0)', 'node_moves': [('east', 'Pantry_(2, 0)'), ('north', 'Wine cellar_(1, 1)')]}, {'node': 'Bar_(1, 0)', 'node_moves': [('east', 'Pantry_(2, 0)'), ('north', 'Wine cellar_(1, 1)')]}, {'node': 'Wine cellar_(1, 1)', 'node_moves': [('south', 'Bar_(1, 0)'), ('north', 'Basement_(1, 2)')]}, {'node': 'Wine cellar_(1, 1)', 'node_moves': [('south', 'Bar_(1, 0)'), ('north', 'Basement_(1, 2)')]}, {'node': 'Basement_(1, 2)', 'node_moves': [('south', 'Wine cellar_(1, 1)')]}]", "Cycle": "cycle_false", "Ambiguity": [1, 2], "Game_Type": "named_graph", "Loop_Reminder": false, "Loop_Reminder_Text": "It seems like we are going back and forth between two rooms. To stop exploring choose 'DONE' as our next action.", "Max_Turns_Reminder": true, "Max_Turns_Reminder_Text": "We have been exploring for a while now. To stop exploring choose 'DONE' as our next action.", "Question": "How many different $ROOM_CATEGORY$(s) did you encounter?", "First_Question_Answer": "('Wine cellar', 2)", "Second_Question_Answer": "('Foyer', 1)", "Third_Question_Answer": "('Exercise room', 0)", "Question_reprompt": "Now once you have stopped the game, you need to answer some questions in this format: 'Answer: <answer>' replace <answer> with an appropriate integer."}, {"game_id": 14, "Prompt": "Please help me with the following task. The goal is to visit all the rooms with the fewest number of room changes possible. In each room, you need to decide the direction to go in. Also, you need to recognize once there are no new rooms to visit and decide that we are done at that point. Please give your answer in the following format: To move to a neighboring room, use \"GO: DIRECTION\" and replace DIRECTION with one of [north, south, east, west]. To stop the exploration, answer with \"DONE\" instead.\n\nHere is an example:\nYou are in the Kitchen. Currently available directions: south, west. What is your next instruction?\nGO: west\nYou have made a step and entered a Lobby. Currently available directions: east, south. What is your next instruction?\nGO: north\nThe move is not valid. You are still in the Lobby. Currently available directions: east, south. What is your next instruction?\nGO: east\nYou have made a step and entered a Garage. Currently available directions: south, west. What is your next instruction?\nGO: south\n...\nYou have made a step and entered a Bedroom. Currently available directions: south. What is your next instruction?\nDONE\n\nLet us start. You are in the $INITIAL_ROOM$. Currently available directions: $INITIAL_DIRECTIONS$. What is your next instruction?", "Player2_positive_answer": "You have made a step and entered $ANOTHER_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Player2_negative_answer": "The move is not valid. You are still in the $SAME_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Move_Construction": "GO:", "Stop_Construction": "DONE", "Grid_Dimension": "4", "Graph_Nodes": "['Library_(0, 1)', 'Balcony_(1, 1)', 'Attic_(1, 2)', 'Laundry room_(1, 3)', 'Gallery_(2, 3)', 'Media room_(3, 3)', 'Laundry room_(2, 2)', 'Media room_(3, 2)']", "Graph_Edges": "[('Library_(0, 1)', 'Balcony_(1, 1)'), ('Balcony_(1, 1)', 'Attic_(1, 2)'), ('Attic_(1, 2)', 'Laundry room_(1, 3)'), ('Laundry room_(1, 3)', 'Gallery_(2, 3)'), ('Gallery_(2, 3)', 'Media room_(3, 3)'), ('Gallery_(2, 3)', 'Laundry room_(2, 2)'), ('Laundry room_(2, 2)', 'Media room_(3, 2)')]", "Current_Position": "Attic_(1, 2)", "Picture_Name": "graph_8600.png", "Directions": "[('Library_(0, 1)', ['east']), ('Balcony_(1, 1)', ['west', 'north']), ('Attic_(1, 2)', ['south', 'north']), ('Laundry room_(1, 3)', ['south', 'east']), ('Gallery_(2, 3)', ['south', 'east', 'west']), ('Media room_(3, 3)', ['west']), ('Laundry room_(2, 2)', ['east', 'north']), ('Media room_(3, 2)', ['west'])]", "Moves": "[{'node': 'Library_(0, 1)', 'node_moves': [('east', 'Balcony_(1, 1)')]}, {'node': 'Balcony_(1, 1)', 'node_moves': [('west', 'Library_(0, 1)'), ('north', 'Attic_(1, 2)')]}, {'node': 'Balcony_(1, 1)', 'node_moves': [('west', 'Library_(0, 1)'), ('north', 'Attic_(1, 2)')]}, {'node': 'Attic_(1, 2)', 'node_moves': [('south', 'Balcony_(1, 1)'), ('north', 'Laundry room_(1, 3)')]}, {'node': 'Attic_(1, 2)', 'node_moves': [('south', 'Balcony_(1, 1)'), ('north', 'Laundry room_(1, 3)')]}, {'node': 'Laundry room_(1, 3)', 'node_moves': [('south', 'Attic_(1, 2)'), ('east', 'Gallery_(2, 3)')]}, {'node': 'Laundry room_(1, 3)', 'node_moves': [('south', 'Attic_(1, 2)'), ('east', 'Gallery_(2, 3)')]}, {'node': 'Gallery_(2, 3)', 'node_moves': [('south', 'Laundry room_(2, 2)'), ('east', 'Media room_(3, 3)'), ('west', 'Laundry room_(1, 3)')]}, {'node': 'Gallery_(2, 3)', 'node_moves': [('south', 'Laundry room_(2, 2)'), ('east', 'Media room_(3, 3)'), ('west', 'Laundry room_(1, 3)')]}, {'node': 'Gallery_(2, 3)', 'node_moves': [('south', 'Laundry room_(2, 2)'), ('east', 'Media room_(3, 3)'), ('west', 'Laundry room_(1, 3)')]}, {'node': 'Media room_(3, 3)', 'node_moves': [('west', 'Gallery_(2, 3)')]}, {'node': 'Laundry room_(2, 2)', 'node_moves': [('east', 'Media room_(3, 2)'), ('north', 'Gallery_(2, 3)')]}, {'node': 'Laundry room_(2, 2)', 'node_moves': [('east', 'Media room_(3, 2)'), ('north', 'Gallery_(2, 3)')]}, {'node': 'Media room_(3, 2)', 'node_moves': [('west', 'Laundry room_(2, 2)')]}]", "Cycle": "cycle_false", "Ambiguity": [2, 2], "Game_Type": "named_graph", "Loop_Reminder": false, "Loop_Reminder_Text": "It seems like we are going back and forth between two rooms. To stop exploring choose 'DONE' as our next action.", "Max_Turns_Reminder": true, "Max_Turns_Reminder_Text": "We have been exploring for a while now. To stop exploring choose 'DONE' as our next action.", "Question": "How many different $ROOM_CATEGORY$(s) did you encounter?", "First_Question_Answer": "('Media room', 2)", "Second_Question_Answer": "('Laundry room', 2)", "Third_Question_Answer": "('Sauna', 0)", "Question_reprompt": "Now once you have stopped the game, you need to answer some questions in this format: 'Answer: <answer>' replace <answer> with an appropriate integer."}, {"game_id": 15, "Prompt": "Please help me with the following task. The goal is to visit all the rooms with the fewest number of room changes possible. In each room, you need to decide the direction to go in. Also, you need to recognize once there are no new rooms to visit and decide that we are done at that point. Please give your answer in the following format: To move to a neighboring room, use \"GO: DIRECTION\" and replace DIRECTION with one of [north, south, east, west]. To stop the exploration, answer with \"DONE\" instead.\n\nHere is an example:\nYou are in the Kitchen. Currently available directions: south, west. What is your next instruction?\nGO: west\nYou have made a step and entered a Lobby. Currently available directions: east, south. What is your next instruction?\nGO: north\nThe move is not valid. You are still in the Lobby. Currently available directions: east, south. What is your next instruction?\nGO: east\nYou have made a step and entered a Garage. Currently available directions: south, west. What is your next instruction?\nGO: south\n...\nYou have made a step and entered a Bedroom. Currently available directions: south. What is your next instruction?\nDONE\n\nLet us start. You are in the $INITIAL_ROOM$. Currently available directions: $INITIAL_DIRECTIONS$. What is your next instruction?", "Player2_positive_answer": "You have made a step and entered $ANOTHER_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Player2_negative_answer": "The move is not valid. You are still in the $SAME_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Move_Construction": "GO:", "Stop_Construction": "DONE", "Grid_Dimension": "4", "Graph_Nodes": "['Exercise room_(2, 2)', 'Recreation room_(2, 3)', 'Closet_(3, 2)', 'Gallery_(3, 1)', 'Cellar_(2, 1)', 'Closet_(2, 0)', 'Recreation room_(1, 0)', 'Conservatory_(1, 1)']", "Graph_Edges": "[('Exercise room_(2, 2)', 'Recreation room_(2, 3)'), ('Exercise room_(2, 2)', 'Closet_(3, 2)'), ('Exercise room_(2, 2)', 'Cellar_(2, 1)'), ('Closet_(3, 2)', 'Gallery_(3, 1)'), ('Cellar_(2, 1)', 'Closet_(2, 0)'), ('Closet_(2, 0)', 'Recreation room_(1, 0)'), ('Recreation room_(1, 0)', 'Conservatory_(1, 1)')]", "Current_Position": "Recreation room_(1, 0)", "Picture_Name": "graph_1072.png", "Directions": "[('Exercise room_(2, 2)', ['south', 'north', 'east']), ('Recreation room_(2, 3)', ['south']), ('Closet_(3, 2)', ['south', 'west']), ('Gallery_(3, 1)', ['north']), ('Cellar_(2, 1)', ['south', 'north']), ('Closet_(2, 0)', ['north', 'west']), ('Recreation room_(1, 0)', ['east', 'north']), ('Conservatory_(1, 1)', ['south'])]", "Moves": "[{'node': 'Exercise room_(2, 2)', 'node_moves': [('south', 'Cellar_(2, 1)'), ('north', 'Recreation room_(2, 3)'), ('east', 'Closet_(3, 2)')]}, {'node': 'Exercise room_(2, 2)', 'node_moves': [('south', 'Cellar_(2, 1)'), ('north', 'Recreation room_(2, 3)'), ('east', 'Closet_(3, 2)')]}, {'node': 'Exercise room_(2, 2)', 'node_moves': [('south', 'Cellar_(2, 1)'), ('north', 'Recreation room_(2, 3)'), ('east', 'Closet_(3, 2)')]}, {'node': 'Recreation room_(2, 3)', 'node_moves': [('south', 'Exercise room_(2, 2)')]}, {'node': 'Closet_(3, 2)', 'node_moves': [('south', 'Gallery_(3, 1)'), ('west', 'Exercise room_(2, 2)')]}, {'node': 'Closet_(3, 2)', 'node_moves': [('south', 'Gallery_(3, 1)'), ('west', 'Exercise room_(2, 2)')]}, {'node': 'Gallery_(3, 1)', 'node_moves': [('north', 'Closet_(3, 2)')]}, {'node': 'Cellar_(2, 1)', 'node_moves': [('south', 'Closet_(2, 0)'), ('north', 'Exercise room_(2, 2)')]}, {'node': 'Cellar_(2, 1)', 'node_moves': [('south', 'Closet_(2, 0)'), ('north', 'Exercise room_(2, 2)')]}, {'node': 'Closet_(2, 0)', 'node_moves': [('north', 'Cellar_(2, 1)'), ('west', 'Recreation room_(1, 0)')]}, {'node': 'Closet_(2, 0)', 'node_moves': [('north', 'Cellar_(2, 1)'), ('west', 'Recreation room_(1, 0)')]}, {'node': 'Recreation room_(1, 0)', 'node_moves': [('east', 'Closet_(2, 0)'), ('north', 'Conservatory_(1, 1)')]}, {'node': 'Recreation room_(1, 0)', 'node_moves': [('east', 'Closet_(2, 0)'), ('north', 'Conservatory_(1, 1)')]}, {'node': 'Conservatory_(1, 1)', 'node_moves': [('south', 'Recreation room_(1, 0)')]}]", "Cycle": "cycle_false", "Ambiguity": [2, 2], "Game_Type": "named_graph", "Loop_Reminder": false, "Loop_Reminder_Text": "It seems like we are going back and forth between two rooms. To stop exploring choose 'DONE' as our next action.", "Max_Turns_Reminder": true, "Max_Turns_Reminder_Text": "We have been exploring for a while now. To stop exploring choose 'DONE' as our next action.", "Question": "How many different $ROOM_CATEGORY$(s) did you encounter?", "First_Question_Answer": "('Closet', 2)", "Second_Question_Answer": "('Recreation room', 2)", "Third_Question_Answer": "('Workshop', 0)", "Question_reprompt": "Now once you have stopped the game, you need to answer some questions in this format: 'Answer: <answer>' replace <answer> with an appropriate integer."}, {"game_id": 16, "Prompt": "Please help me with the following task. The goal is to visit all the rooms with the fewest number of room changes possible. In each room, you need to decide the direction to go in. Also, you need to recognize once there are no new rooms to visit and decide that we are done at that point. Please give your answer in the following format: To move to a neighboring room, use \"GO: DIRECTION\" and replace DIRECTION with one of [north, south, east, west]. To stop the exploration, answer with \"DONE\" instead.\n\nHere is an example:\nYou are in the Kitchen. Currently available directions: south, west. What is your next instruction?\nGO: west\nYou have made a step and entered a Lobby. Currently available directions: east, south. What is your next instruction?\nGO: north\nThe move is not valid. You are still in the Lobby. Currently available directions: east, south. What is your next instruction?\nGO: east\nYou have made a step and entered a Garage. Currently available directions: south, west. What is your next instruction?\nGO: south\n...\nYou have made a step and entered a Bedroom. Currently available directions: south. What is your next instruction?\nDONE\n\nLet us start. You are in the $INITIAL_ROOM$. Currently available directions: $INITIAL_DIRECTIONS$. What is your next instruction?", "Player2_positive_answer": "You have made a step and entered $ANOTHER_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Player2_negative_answer": "The move is not valid. You are still in the $SAME_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Move_Construction": "GO:", "Stop_Construction": "DONE", "Grid_Dimension": "4", "Graph_Nodes": "['Sunroom_(1, 1)', 'Basement_(1, 2)', 'Billiard room_(1, 3)', 'Living room_(0, 3)', 'Bathroom_(2, 2)', 'Home gym_(3, 2)', 'Bedroom_(3, 1)', 'Living room_(3, 3)']", "Graph_Edges": "[('Sunroom_(1, 1)', 'Basement_(1, 2)'), ('Basement_(1, 2)', 'Billiard room_(1, 3)'), ('Basement_(1, 2)', 'Bathroom_(2, 2)'), ('Billiard room_(1, 3)', 'Living room_(0, 3)'), ('Bathroom_(2, 2)', 'Home gym_(3, 2)'), ('Home gym_(3, 2)', 'Bedroom_(3, 1)'), ('Home gym_(3, 2)', 'Living room_(3, 3)')]", "Current_Position": "Sunroom_(1, 1)", "Picture_Name": "graph_1929.png", "Directions": "[('Sunroom_(1, 1)', ['north']), ('Basement_(1, 2)', ['south', 'east', 'north']), ('Billiard room_(1, 3)', ['south', 'west']), ('Living room_(0, 3)', ['east']), ('Bathroom_(2, 2)', ['east', 'west']), ('Home gym_(3, 2)', ['south', 'west', 'north']), ('Bedroom_(3, 1)', ['north']), ('Living room_(3, 3)', ['south'])]", "Moves": "[{'node': 'Sunroom_(1, 1)', 'node_moves': [('north', 'Basement_(1, 2)')]}, {'node': 'Basement_(1, 2)', 'node_moves': [('south', 'Sunroom_(1, 1)'), ('east', 'Bathroom_(2, 2)'), ('north', 'Billiard room_(1, 3)')]}, {'node': 'Basement_(1, 2)', 'node_moves': [('south', 'Sunroom_(1, 1)'), ('east', 'Bathroom_(2, 2)'), ('north', 'Billiard room_(1, 3)')]}, {'node': 'Basement_(1, 2)', 'node_moves': [('south', 'Sunroom_(1, 1)'), ('east', 'Bathroom_(2, 2)'), ('north', 'Billiard room_(1, 3)')]}, {'node': 'Billiard room_(1, 3)', 'node_moves': [('south', 'Basement_(1, 2)'), ('west', 'Living room_(0, 3)')]}, {'node': 'Billiard room_(1, 3)', 'node_moves': [('south', 'Basement_(1, 2)'), ('west', 'Living room_(0, 3)')]}, {'node': 'Living room_(0, 3)', 'node_moves': [('east', 'Billiard room_(1, 3)')]}, {'node': 'Bathroom_(2, 2)', 'node_moves': [('east', 'Home gym_(3, 2)'), ('west', 'Basement_(1, 2)')]}, {'node': 'Bathroom_(2, 2)', 'node_moves': [('east', 'Home gym_(3, 2)'), ('west', 'Basement_(1, 2)')]}, {'node': 'Home gym_(3, 2)', 'node_moves': [('south', 'Bedroom_(3, 1)'), ('west', 'Bathroom_(2, 2)'), ('north', 'Living room_(3, 3)')]}, {'node': 'Home gym_(3, 2)', 'node_moves': [('south', 'Bedroom_(3, 1)'), ('west', 'Bathroom_(2, 2)'), ('north', 'Living room_(3, 3)')]}, {'node': 'Home gym_(3, 2)', 'node_moves': [('south', 'Bedroom_(3, 1)'), ('west', 'Bathroom_(2, 2)'), ('north', 'Living room_(3, 3)')]}, {'node': 'Bedroom_(3, 1)', 'node_moves': [('north', 'Home gym_(3, 2)')]}, {'node': 'Living room_(3, 3)', 'node_moves': [('south', 'Home gym_(3, 2)')]}]", "Cycle": "cycle_false", "Ambiguity": [1, 2], "Game_Type": "named_graph", "Loop_Reminder": false, "Loop_Reminder_Text": "It seems like we are going back and forth between two rooms. To stop exploring choose 'DONE' as our next action.", "Max_Turns_Reminder": true, "Max_Turns_Reminder_Text": "We have been exploring for a while now. To stop exploring choose 'DONE' as our next action.", "Question": "How many different $ROOM_CATEGORY$(s) did you encounter?", "First_Question_Answer": "('Living room', 2)", "Second_Question_Answer": "('Home gym', 1)", "Third_Question_Answer": "('Gallery', 0)", "Question_reprompt": "Now once you have stopped the game, you need to answer some questions in this format: 'Answer: <answer>' replace <answer> with an appropriate integer."}, {"game_id": 17, "Prompt": "Please help me with the following task. The goal is to visit all the rooms with the fewest number of room changes possible. In each room, you need to decide the direction to go in. Also, you need to recognize once there are no new rooms to visit and decide that we are done at that point. Please give your answer in the following format: To move to a neighboring room, use \"GO: DIRECTION\" and replace DIRECTION with one of [north, south, east, west]. To stop the exploration, answer with \"DONE\" instead.\n\nHere is an example:\nYou are in the Kitchen. Currently available directions: south, west. What is your next instruction?\nGO: west\nYou have made a step and entered a Lobby. Currently available directions: east, south. What is your next instruction?\nGO: north\nThe move is not valid. You are still in the Lobby. Currently available directions: east, south. What is your next instruction?\nGO: east\nYou have made a step and entered a Garage. Currently available directions: south, west. What is your next instruction?\nGO: south\n...\nYou have made a step and entered a Bedroom. Currently available directions: south. What is your next instruction?\nDONE\n\nLet us start. You are in the $INITIAL_ROOM$. Currently available directions: $INITIAL_DIRECTIONS$. What is your next instruction?", "Player2_positive_answer": "You have made a step and entered $ANOTHER_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Player2_negative_answer": "The move is not valid. You are still in the $SAME_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Move_Construction": "GO:", "Stop_Construction": "DONE", "Grid_Dimension": "4", "Graph_Nodes": "['Gallery_(0, 3)', 'Sunroom_(0, 2)', 'Studio_(0, 1)', 'Kitchen_(0, 0)', 'Study room_(1, 1)', 'Conservatory_(1, 2)', 'Gallery_(2, 1)', 'Library_(3, 1)']", "Graph_Edges": "[('Gallery_(0, 3)', 'Sunroom_(0, 2)'), ('Sunroom_(0, 2)', 'Studio_(0, 1)'), ('Studio_(0, 1)', 'Kitchen_(0, 0)'), ('Studio_(0, 1)', 'Study room_(1, 1)'), ('Study room_(1, 1)', 'Conservatory_(1, 2)'), ('Study room_(1, 1)', 'Gallery_(2, 1)'), ('Gallery_(2, 1)', 'Library_(3, 1)')]", "Current_Position": "Gallery_(2, 1)", "Picture_Name": "graph_7561.png", "Directions": "[('Gallery_(0, 3)', ['south']), ('Sunroom_(0, 2)', ['south', 'north']), ('Studio_(0, 1)', ['south', 'east', 'north']), ('Kitchen_(0, 0)', ['north']), ('Study room_(1, 1)', ['west', 'east', 'north']), ('Conservatory_(1, 2)', ['south']), ('Gallery_(2, 1)', ['east', 'west']), ('Library_(3, 1)', ['west'])]", "Moves": "[{'node': 'Gallery_(0, 3)', 'node_moves': [('south', 'Sunroom_(0, 2)')]}, {'node': 'Sunroom_(0, 2)', 'node_moves': [('south', 'Studio_(0, 1)'), ('north', 'Gallery_(0, 3)')]}, {'node': 'Sunroom_(0, 2)', 'node_moves': [('south', 'Studio_(0, 1)'), ('north', 'Gallery_(0, 3)')]}, {'node': 'Studio_(0, 1)', 'node_moves': [('south', 'Kitchen_(0, 0)'), ('east', 'Study room_(1, 1)'), ('north', 'Sunroom_(0, 2)')]}, {'node': 'Studio_(0, 1)', 'node_moves': [('south', 'Kitchen_(0, 0)'), ('east', 'Study room_(1, 1)'), ('north', 'Sunroom_(0, 2)')]}, {'node': 'Studio_(0, 1)', 'node_moves': [('south', 'Kitchen_(0, 0)'), ('east', 'Study room_(1, 1)'), ('north', 'Sunroom_(0, 2)')]}, {'node': 'Kitchen_(0, 0)', 'node_moves': [('north', 'Studio_(0, 1)')]}, {'node': 'Study room_(1, 1)', 'node_moves': [('west', 'Studio_(0, 1)'), ('east', 'Gallery_(2, 1)'), ('north', 'Conservatory_(1, 2)')]}, {'node': 'Study room_(1, 1)', 'node_moves': [('west', 'Studio_(0, 1)'), ('east', 'Gallery_(2, 1)'), ('north', 'Conservatory_(1, 2)')]}, {'node': 'Study room_(1, 1)', 'node_moves': [('west', 'Studio_(0, 1)'), ('east', 'Gallery_(2, 1)'), ('north', 'Conservatory_(1, 2)')]}, {'node': 'Conservatory_(1, 2)', 'node_moves': [('south', 'Study room_(1, 1)')]}, {'node': 'Gallery_(2, 1)', 'node_moves': [('east', 'Library_(3, 1)'), ('west', 'Study room_(1, 1)')]}, {'node': 'Gallery_(2, 1)', 'node_moves': [('east', 'Library_(3, 1)'), ('west', 'Study room_(1, 1)')]}, {'node': 'Library_(3, 1)', 'node_moves': [('west', 'Gallery_(2, 1)')]}]", "Cycle": "cycle_false", "Ambiguity": [1, 2], "Game_Type": "named_graph", "Loop_Reminder": false, "Loop_Reminder_Text": "It seems like we are going back and forth between two rooms. To stop exploring choose 'DONE' as our next action.", "Max_Turns_Reminder": true, "Max_Turns_Reminder_Text": "We have been exploring for a while now. To stop exploring choose 'DONE' as our next action.", "Question": "How many different $ROOM_CATEGORY$(s) did you encounter?", "First_Question_Answer": "('Gallery', 2)", "Second_Question_Answer": "('Kitchen', 1)", "Third_Question_Answer": "('Nursery', 0)", "Question_reprompt": "Now once you have stopped the game, you need to answer some questions in this format: 'Answer: <answer>' replace <answer> with an appropriate integer."}, {"game_id": 18, "Prompt": "Please help me with the following task. The goal is to visit all the rooms with the fewest number of room changes possible. In each room, you need to decide the direction to go in. Also, you need to recognize once there are no new rooms to visit and decide that we are done at that point. Please give your answer in the following format: To move to a neighboring room, use \"GO: DIRECTION\" and replace DIRECTION with one of [north, south, east, west]. To stop the exploration, answer with \"DONE\" instead.\n\nHere is an example:\nYou are in the Kitchen. Currently available directions: south, west. What is your next instruction?\nGO: west\nYou have made a step and entered a Lobby. Currently available directions: east, south. What is your next instruction?\nGO: north\nThe move is not valid. You are still in the Lobby. Currently available directions: east, south. What is your next instruction?\nGO: east\nYou have made a step and entered a Garage. Currently available directions: south, west. What is your next instruction?\nGO: south\n...\nYou have made a step and entered a Bedroom. Currently available directions: south. What is your next instruction?\nDONE\n\nLet us start. You are in the $INITIAL_ROOM$. Currently available directions: $INITIAL_DIRECTIONS$. What is your next instruction?", "Player2_positive_answer": "You have made a step and entered $ANOTHER_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Player2_negative_answer": "The move is not valid. You are still in the $SAME_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Move_Construction": "GO:", "Stop_Construction": "DONE", "Grid_Dimension": "4", "Graph_Nodes": "['Music room_(0, 0)', 'Garage_(0, 1)', 'Study room_(0, 2)', 'Wine cellar_(0, 3)', 'Home theater_(1, 3)', 'Billiard room_(1, 2)', 'Wine cellar_(2, 2)', 'Music room_(2, 3)']", "Graph_Edges": "[('Music room_(0, 0)', 'Garage_(0, 1)'), ('Garage_(0, 1)', 'Study room_(0, 2)'), ('Study room_(0, 2)', 'Wine cellar_(0, 3)'), ('Wine cellar_(0, 3)', 'Home theater_(1, 3)'), ('Home theater_(1, 3)', 'Billiard room_(1, 2)'), ('Billiard room_(1, 2)', 'Wine cellar_(2, 2)'), ('Wine cellar_(2, 2)', 'Music room_(2, 3)')]", "Current_Position": "Billiard room_(1, 2)", "Picture_Name": "graph_5292.png", "Directions": "[('Music room_(0, 0)', ['north']), ('Garage_(0, 1)', ['south', 'north']), ('Study room_(0, 2)', ['south', 'north']), ('Wine cellar_(0, 3)', ['south', 'east']), ('Home theater_(1, 3)', ['south', 'west']), ('Billiard room_(1, 2)', ['east', 'north']), ('Wine cellar_(2, 2)', ['west', 'north']), ('Music room_(2, 3)', ['south'])]", "Moves": "[{'node': 'Music room_(0, 0)', 'node_moves': [('north', 'Garage_(0, 1)')]}, {'node': 'Garage_(0, 1)', 'node_moves': [('south', 'Music room_(0, 0)'), ('north', 'Study room_(0, 2)')]}, {'node': 'Garage_(0, 1)', 'node_moves': [('south', 'Music room_(0, 0)'), ('north', 'Study room_(0, 2)')]}, {'node': 'Study room_(0, 2)', 'node_moves': [('south', 'Garage_(0, 1)'), ('north', 'Wine cellar_(0, 3)')]}, {'node': 'Study room_(0, 2)', 'node_moves': [('south', 'Garage_(0, 1)'), ('north', 'Wine cellar_(0, 3)')]}, {'node': 'Wine cellar_(0, 3)', 'node_moves': [('south', 'Study room_(0, 2)'), ('east', 'Home theater_(1, 3)')]}, {'node': 'Wine cellar_(0, 3)', 'node_moves': [('south', 'Study room_(0, 2)'), ('east', 'Home theater_(1, 3)')]}, {'node': 'Home theater_(1, 3)', 'node_moves': [('south', 'Billiard room_(1, 2)'), ('west', 'Wine cellar_(0, 3)')]}, {'node': 'Home theater_(1, 3)', 'node_moves': [('south', 'Billiard room_(1, 2)'), ('west', 'Wine cellar_(0, 3)')]}, {'node': 'Billiard room_(1, 2)', 'node_moves': [('east', 'Wine cellar_(2, 2)'), ('north', 'Home theater_(1, 3)')]}, {'node': 'Billiard room_(1, 2)', 'node_moves': [('east', 'Wine cellar_(2, 2)'), ('north', 'Home theater_(1, 3)')]}, {'node': 'Wine cellar_(2, 2)', 'node_moves': [('west', 'Billiard room_(1, 2)'), ('north', 'Music room_(2, 3)')]}, {'node': 'Wine cellar_(2, 2)', 'node_moves': [('west', 'Billiard room_(1, 2)'), ('north', 'Music room_(2, 3)')]}, {'node': 'Music room_(2, 3)', 'node_moves': [('south', 'Wine cellar_(2, 2)')]}]", "Cycle": "cycle_false", "Ambiguity": [2, 2], "Game_Type": "named_graph", "Loop_Reminder": false, "Loop_Reminder_Text": "It seems like we are going back and forth between two rooms. To stop exploring choose 'DONE' as our next action.", "Max_Turns_Reminder": true, "Max_Turns_Reminder_Text": "We have been exploring for a while now. To stop exploring choose 'DONE' as our next action.", "Question": "How many different $ROOM_CATEGORY$(s) did you encounter?", "First_Question_Answer": "('Wine cellar', 2)", "Second_Question_Answer": "('Music room', 2)", "Third_Question_Answer": "('Closet', 0)", "Question_reprompt": "Now once you have stopped the game, you need to answer some questions in this format: 'Answer: <answer>' replace <answer> with an appropriate integer."}, {"game_id": 19, "Prompt": "Please help me with the following task. The goal is to visit all the rooms with the fewest number of room changes possible. In each room, you need to decide the direction to go in. Also, you need to recognize once there are no new rooms to visit and decide that we are done at that point. Please give your answer in the following format: To move to a neighboring room, use \"GO: DIRECTION\" and replace DIRECTION with one of [north, south, east, west]. To stop the exploration, answer with \"DONE\" instead.\n\nHere is an example:\nYou are in the Kitchen. Currently available directions: south, west. What is your next instruction?\nGO: west\nYou have made a step and entered a Lobby. Currently available directions: east, south. What is your next instruction?\nGO: north\nThe move is not valid. You are still in the Lobby. Currently available directions: east, south. What is your next instruction?\nGO: east\nYou have made a step and entered a Garage. Currently available directions: south, west. What is your next instruction?\nGO: south\n...\nYou have made a step and entered a Bedroom. Currently available directions: south. What is your next instruction?\nDONE\n\nLet us start. You are in the $INITIAL_ROOM$. Currently available directions: $INITIAL_DIRECTIONS$. What is your next instruction?", "Player2_positive_answer": "You have made a step and entered $ANOTHER_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Player2_negative_answer": "The move is not valid. You are still in the $SAME_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Move_Construction": "GO:", "Stop_Construction": "DONE", "Grid_Dimension": "4", "Graph_Nodes": "['Studio_(1, 2)', 'Home theater_(1, 3)', 'Pantry_(2, 2)', 'Gallery_(2, 3)', 'Basement_(1, 1)', 'Media room_(0, 1)', 'Gallery_(0, 2)', 'Playroom_(0, 0)']", "Graph_Edges": "[('Studio_(1, 2)', 'Home theater_(1, 3)'), ('Studio_(1, 2)', 'Pantry_(2, 2)'), ('Studio_(1, 2)', 'Basement_(1, 1)'), ('Home theater_(1, 3)', 'Gallery_(2, 3)'), ('Basement_(1, 1)', 'Media room_(0, 1)'), ('Media room_(0, 1)', 'Gallery_(0, 2)'), ('Media room_(0, 1)', 'Playroom_(0, 0)')]", "Current_Position": "Studio_(1, 2)", "Picture_Name": "graph_8654.png", "Directions": "[('Studio_(1, 2)', ['south', 'north', 'east']), ('Home theater_(1, 3)', ['south', 'east']), ('Pantry_(2, 2)', ['west']), ('Gallery_(2, 3)', ['west']), ('Basement_(1, 1)', ['north', 'west']), ('Media room_(0, 1)', ['south', 'east', 'north']), ('Gallery_(0, 2)', ['south']), ('Playroom_(0, 0)', ['north'])]", "Moves": "[{'node': 'Studio_(1, 2)', 'node_moves': [('south', 'Basement_(1, 1)'), ('north', 'Home theater_(1, 3)'), ('east', 'Pantry_(2, 2)')]}, {'node': 'Studio_(1, 2)', 'node_moves': [('south', 'Basement_(1, 1)'), ('north', 'Home theater_(1, 3)'), ('east', 'Pantry_(2, 2)')]}, {'node': 'Studio_(1, 2)', 'node_moves': [('south', 'Basement_(1, 1)'), ('north', 'Home theater_(1, 3)'), ('east', 'Pantry_(2, 2)')]}, {'node': 'Home theater_(1, 3)', 'node_moves': [('south', 'Studio_(1, 2)'), ('east', 'Gallery_(2, 3)')]}, {'node': 'Home theater_(1, 3)', 'node_moves': [('south', 'Studio_(1, 2)'), ('east', 'Gallery_(2, 3)')]}, {'node': 'Pantry_(2, 2)', 'node_moves': [('west', 'Studio_(1, 2)')]}, {'node': 'Gallery_(2, 3)', 'node_moves': [('west', 'Home theater_(1, 3)')]}, {'node': 'Basement_(1, 1)', 'node_moves': [('north', 'Studio_(1, 2)'), ('west', 'Media room_(0, 1)')]}, {'node': 'Basement_(1, 1)', 'node_moves': [('north', 'Studio_(1, 2)'), ('west', 'Media room_(0, 1)')]}, {'node': 'Media room_(0, 1)', 'node_moves': [('south', 'Playroom_(0, 0)'), ('east', 'Basement_(1, 1)'), ('north', 'Gallery_(0, 2)')]}, {'node': 'Media room_(0, 1)', 'node_moves': [('south', 'Playroom_(0, 0)'), ('east', 'Basement_(1, 1)'), ('north', 'Gallery_(0, 2)')]}, {'node': 'Media room_(0, 1)', 'node_moves': [('south', 'Playroom_(0, 0)'), ('east', 'Basement_(1, 1)'), ('north', 'Gallery_(0, 2)')]}, {'node': 'Gallery_(0, 2)', 'node_moves': [('south', 'Media room_(0, 1)')]}, {'node': 'Playroom_(0, 0)', 'node_moves': [('north', 'Media room_(0, 1)')]}]", "Cycle": "cycle_false", "Ambiguity": [1, 2], "Game_Type": "named_graph", "Loop_Reminder": false, "Loop_Reminder_Text": "It seems like we are going back and forth between two rooms. To stop exploring choose 'DONE' as our next action.", "Max_Turns_Reminder": true, "Max_Turns_Reminder_Text": "We have been exploring for a while now. To stop exploring choose 'DONE' as our next action.", "Question": "How many different $ROOM_CATEGORY$(s) did you encounter?", "First_Question_Answer": "('Gallery', 2)", "Second_Question_Answer": "('Home theater', 1)", "Third_Question_Answer": "('Game room', 0)", "Question_reprompt": "Now once you have stopped the game, you need to answer some questions in this format: 'Answer: <answer>' replace <answer> with an appropriate integer."}]}, {"name": "strong", "game_instances": [{"game_id": 20, "Prompt": "Please help me with the following task. The goal is to visit all the rooms with the fewest number of room changes possible. In each room, you need to decide the direction to go in. Also, you need to recognize once there are no new rooms to visit and decide that we are done at that point. Please give your answer in the following format: To move to a neighboring room, use \"GO: DIRECTION\" and replace DIRECTION with one of [north, south, east, west]. To stop the exploration, answer with \"DONE\" instead.\n\nHere is an example:\nYou are in the Kitchen. Currently available directions: south, west. What is your next instruction?\nGO: west\nYou have made a step and entered a Lobby. Currently available directions: east, south. What is your next instruction?\nGO: north\nThe move is not valid. You are still in the Lobby. Currently available directions: east, south. What is your next instruction?\nGO: east\nYou have made a step and entered a Garage. Currently available directions: south, west. What is your next instruction?\nGO: south\n...\nYou have made a step and entered a Bedroom. Currently available directions: south. What is your next instruction?\nDONE\n\nLet us start. You are in the $INITIAL_ROOM$. Currently available directions: $INITIAL_DIRECTIONS$. What is your next instruction?", "Player2_positive_answer": "You have made a step and entered $ANOTHER_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Player2_negative_answer": "The move is not valid. You are still in the $SAME_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Move_Construction": "GO:", "Stop_Construction": "DONE", "Grid_Dimension": "4", "Graph_Nodes": "['Home office_(3, 0)', 'Utility room_(3, 1)', 'Foyer_(2, 0)', 'Nursery_(2, 1)', 'Living room_(2, 2)', 'Nursery_(1, 2)', 'Nursery_(2, 3)', 'Studio_(1, 1)']", "Graph_Edges": "[('Home office_(3, 0)', 'Utility room_(3, 1)'), ('Home office_(3, 0)', 'Foyer_(2, 0)'), ('Foyer_(2, 0)', 'Nursery_(2, 1)'), ('Nursery_(2, 1)', 'Living room_(2, 2)'), ('Nursery_(2, 1)', 'Studio_(1, 1)'), ('Living room_(2, 2)', 'Nursery_(1, 2)'), ('Living room_(2, 2)', 'Nursery_(2, 3)')]", "Current_Position": "Utility room_(3, 1)", "Picture_Name": "graph_8778.png", "Directions": "[('Home office_(3, 0)', ['west', 'north']), ('Utility room_(3, 1)', ['south']), ('Foyer_(2, 0)', ['east', 'north']), ('Nursery_(2, 1)', ['south', 'west', 'north']), ('Living room_(2, 2)', ['south', 'north', 'west']), ('Nursery_(1, 2)', ['east']), ('Nursery_(2, 3)', ['south']), ('Studio_(1, 1)', ['east'])]", "Moves": "[{'node': 'Home office_(3, 0)', 'node_moves': [('west', 'Foyer_(2, 0)'), ('north', 'Utility room_(3, 1)')]}, {'node': 'Home office_(3, 0)', 'node_moves': [('west', 'Foyer_(2, 0)'), ('north', 'Utility room_(3, 1)')]}, {'node': 'Utility room_(3, 1)', 'node_moves': [('south', 'Home office_(3, 0)')]}, {'node': 'Foyer_(2, 0)', 'node_moves': [('east', 'Home office_(3, 0)'), ('north', 'Nursery_(2, 1)')]}, {'node': 'Foyer_(2, 0)', 'node_moves': [('east', 'Home office_(3, 0)'), ('north', 'Nursery_(2, 1)')]}, {'node': 'Nursery_(2, 1)', 'node_moves': [('south', 'Foyer_(2, 0)'), ('west', 'Studio_(1, 1)'), ('north', 'Living room_(2, 2)')]}, {'node': 'Nursery_(2, 1)', 'node_moves': [('south', 'Foyer_(2, 0)'), ('west', 'Studio_(1, 1)'), ('north', 'Living room_(2, 2)')]}, {'node': 'Nursery_(2, 1)', 'node_moves': [('south', 'Foyer_(2, 0)'), ('west', 'Studio_(1, 1)'), ('north', 'Living room_(2, 2)')]}, {'node': 'Living room_(2, 2)', 'node_moves': [('south', 'Nursery_(2, 1)'), ('north', 'Nursery_(2, 3)'), ('west', 'Nursery_(1, 2)')]}, {'node': 'Living room_(2, 2)', 'node_moves': [('south', 'Nursery_(2, 1)'), ('north', 'Nursery_(2, 3)'), ('west', 'Nursery_(1, 2)')]}, {'node': 'Living room_(2, 2)', 'node_moves': [('south', 'Nursery_(2, 1)'), ('north', 'Nursery_(2, 3)'), ('west', 'Nursery_(1, 2)')]}, {'node': 'Nursery_(1, 2)', 'node_moves': [('east', 'Living room_(2, 2)')]}, {'node': 'Nursery_(2, 3)', 'node_moves': [('south', 'Living room_(2, 2)')]}, {'node': 'Studio_(1, 1)', 'node_moves': [('east', 'Nursery_(2, 1)')]}]", "Cycle": "cycle_false", "Ambiguity": [1, 3], "Game_Type": "named_graph", "Loop_Reminder": false, "Loop_Reminder_Text": "It seems like we are going back and forth between two rooms. To stop exploring choose 'DONE' as our next action.", "Max_Turns_Reminder": true, "Max_Turns_Reminder_Text": "We have been exploring for a while now. To stop exploring choose 'DONE' as our next action.", "Question": "How many different $ROOM_CATEGORY$(s) did you encounter?", "First_Question_Answer": "('Nursery', 3)", "Second_Question_Answer": "('Foyer', 1)", "Third_Question_Answer": "('Home gym', 0)", "Question_reprompt": "Now once you have stopped the game, you need to answer some questions in this format: 'Answer: <answer>' replace <answer> with an appropriate integer."}, {"game_id": 21, "Prompt": "Please help me with the following task. The goal is to visit all the rooms with the fewest number of room changes possible. In each room, you need to decide the direction to go in. Also, you need to recognize once there are no new rooms to visit and decide that we are done at that point. Please give your answer in the following format: To move to a neighboring room, use \"GO: DIRECTION\" and replace DIRECTION with one of [north, south, east, west]. To stop the exploration, answer with \"DONE\" instead.\n\nHere is an example:\nYou are in the Kitchen. Currently available directions: south, west. What is your next instruction?\nGO: west\nYou have made a step and entered a Lobby. Currently available directions: east, south. What is your next instruction?\nGO: north\nThe move is not valid. You are still in the Lobby. Currently available directions: east, south. What is your next instruction?\nGO: east\nYou have made a step and entered a Garage. Currently available directions: south, west. What is your next instruction?\nGO: south\n...\nYou have made a step and entered a Bedroom. Currently available directions: south. What is your next instruction?\nDONE\n\nLet us start. You are in the $INITIAL_ROOM$. Currently available directions: $INITIAL_DIRECTIONS$. What is your next instruction?", "Player2_positive_answer": "You have made a step and entered $ANOTHER_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Player2_negative_answer": "The move is not valid. You are still in the $SAME_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Move_Construction": "GO:", "Stop_Construction": "DONE", "Grid_Dimension": "4", "Graph_Nodes": "['Guest room_(1, 2)', 'Workshop_(1, 3)', 'Living room_(2, 3)', 'Guest room_(2, 2)', 'Library_(3, 2)', 'Nursery_(3, 1)', 'Solarium_(2, 1)', 'Guest room_(2, 0)']", "Graph_Edges": "[('Guest room_(1, 2)', 'Workshop_(1, 3)'), ('Workshop_(1, 3)', 'Living room_(2, 3)'), ('Living room_(2, 3)', 'Guest room_(2, 2)'), ('Guest room_(2, 2)', 'Library_(3, 2)'), ('Guest room_(2, 2)', 'Solarium_(2, 1)'), ('Library_(3, 2)', 'Nursery_(3, 1)'), ('Solarium_(2, 1)', 'Guest room_(2, 0)')]", "Current_Position": "Library_(3, 2)", "Picture_Name": "graph_4718.png", "Directions": "[('Guest room_(1, 2)', ['north']), ('Workshop_(1, 3)', ['south', 'east']), ('Living room_(2, 3)', ['south', 'west']), ('Guest room_(2, 2)', ['south', 'east', 'north']), ('Library_(3, 2)', ['south', 'west']), ('Nursery_(3, 1)', ['north']), ('Solarium_(2, 1)', ['south', 'north']), ('Guest room_(2, 0)', ['north'])]", "Moves": "[{'node': 'Guest room_(1, 2)', 'node_moves': [('north', 'Workshop_(1, 3)')]}, {'node': 'Workshop_(1, 3)', 'node_moves': [('south', 'Guest room_(1, 2)'), ('east', 'Living room_(2, 3)')]}, {'node': 'Workshop_(1, 3)', 'node_moves': [('south', 'Guest room_(1, 2)'), ('east', 'Living room_(2, 3)')]}, {'node': 'Living room_(2, 3)', 'node_moves': [('south', 'Guest room_(2, 2)'), ('west', 'Workshop_(1, 3)')]}, {'node': 'Living room_(2, 3)', 'node_moves': [('south', 'Guest room_(2, 2)'), ('west', 'Workshop_(1, 3)')]}, {'node': 'Guest room_(2, 2)', 'node_moves': [('south', 'Solarium_(2, 1)'), ('east', 'Library_(3, 2)'), ('north', 'Living room_(2, 3)')]}, {'node': 'Guest room_(2, 2)', 'node_moves': [('south', 'Solarium_(2, 1)'), ('east', 'Library_(3, 2)'), ('north', 'Living room_(2, 3)')]}, {'node': 'Guest room_(2, 2)', 'node_moves': [('south', 'Solarium_(2, 1)'), ('east', 'Library_(3, 2)'), ('north', 'Living room_(2, 3)')]}, {'node': 'Library_(3, 2)', 'node_moves': [('south', 'Nursery_(3, 1)'), ('west', 'Guest room_(2, 2)')]}, {'node': 'Library_(3, 2)', 'node_moves': [('south', 'Nursery_(3, 1)'), ('west', 'Guest room_(2, 2)')]}, {'node': 'Nursery_(3, 1)', 'node_moves': [('north', 'Library_(3, 2)')]}, {'node': 'Solarium_(2, 1)', 'node_moves': [('south', 'Guest room_(2, 0)'), ('north', 'Guest room_(2, 2)')]}, {'node': 'Solarium_(2, 1)', 'node_moves': [('south', 'Guest room_(2, 0)'), ('north', 'Guest room_(2, 2)')]}, {'node': 'Guest room_(2, 0)', 'node_moves': [('north', 'Solarium_(2, 1)')]}]", "Cycle": "cycle_false", "Ambiguity": [1, 3], "Game_Type": "named_graph", "Loop_Reminder": false, "Loop_Reminder_Text": "It seems like we are going back and forth between two rooms. To stop exploring choose 'DONE' as our next action.", "Max_Turns_Reminder": true, "Max_Turns_Reminder_Text": "We have been exploring for a while now. To stop exploring choose 'DONE' as our next action.", "Question": "How many different $ROOM_CATEGORY$(s) did you encounter?", "First_Question_Answer": "('Guest room', 3)", "Second_Question_Answer": "('Workshop', 1)", "Third_Question_Answer": "('Media room', 0)", "Question_reprompt": "Now once you have stopped the game, you need to answer some questions in this format: 'Answer: <answer>' replace <answer> with an appropriate integer."}, {"game_id": 22, "Prompt": "Please help me with the following task. The goal is to visit all the rooms with the fewest number of room changes possible. In each room, you need to decide the direction to go in. Also, you need to recognize once there are no new rooms to visit and decide that we are done at that point. Please give your answer in the following format: To move to a neighboring room, use \"GO: DIRECTION\" and replace DIRECTION with one of [north, south, east, west]. To stop the exploration, answer with \"DONE\" instead.\n\nHere is an example:\nYou are in the Kitchen. Currently available directions: south, west. What is your next instruction?\nGO: west\nYou have made a step and entered a Lobby. Currently available directions: east, south. What is your next instruction?\nGO: north\nThe move is not valid. You are still in the Lobby. Currently available directions: east, south. What is your next instruction?\nGO: east\nYou have made a step and entered a Garage. Currently available directions: south, west. What is your next instruction?\nGO: south\n...\nYou have made a step and entered a Bedroom. Currently available directions: south. What is your next instruction?\nDONE\n\nLet us start. You are in the $INITIAL_ROOM$. Currently available directions: $INITIAL_DIRECTIONS$. What is your next instruction?", "Player2_positive_answer": "You have made a step and entered $ANOTHER_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Player2_negative_answer": "The move is not valid. You are still in the $SAME_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Move_Construction": "GO:", "Stop_Construction": "DONE", "Grid_Dimension": "4", "Graph_Nodes": "['Music room_(0, 2)', 'Bar_(0, 1)', 'Sunroom_(0, 0)', 'Closet_(1, 1)', 'Closet_(1, 2)', 'Study room_(2, 2)', 'Closet_(2, 3)', 'Guest room_(1, 3)']", "Graph_Edges": "[('Music room_(0, 2)', 'Bar_(0, 1)'), ('Bar_(0, 1)', 'Sunroom_(0, 0)'), ('Bar_(0, 1)', 'Closet_(1, 1)'), ('Closet_(1, 1)', 'Closet_(1, 2)'), ('Closet_(1, 2)', 'Study room_(2, 2)'), ('Study room_(2, 2)', 'Closet_(2, 3)'), ('Closet_(2, 3)', 'Guest room_(1, 3)')]", "Current_Position": "Closet_(2, 3)", "Picture_Name": "graph_6476.png", "Directions": "[('Music room_(0, 2)', ['south']), ('Bar_(0, 1)', ['south', 'east', 'north']), ('Sunroom_(0, 0)', ['north']), ('Closet_(1, 1)', ['west', 'north']), ('Closet_(1, 2)', ['south', 'east']), ('Study room_(2, 2)', ['west', 'north']), ('Closet_(2, 3)', ['south', 'west']), ('Guest room_(1, 3)', ['east'])]", "Moves": "[{'node': 'Music room_(0, 2)', 'node_moves': [('south', 'Bar_(0, 1)')]}, {'node': 'Bar_(0, 1)', 'node_moves': [('south', 'Sunroom_(0, 0)'), ('east', 'Closet_(1, 1)'), ('north', 'Music room_(0, 2)')]}, {'node': 'Bar_(0, 1)', 'node_moves': [('south', 'Sunroom_(0, 0)'), ('east', 'Closet_(1, 1)'), ('north', 'Music room_(0, 2)')]}, {'node': 'Bar_(0, 1)', 'node_moves': [('south', 'Sunroom_(0, 0)'), ('east', 'Closet_(1, 1)'), ('north', 'Music room_(0, 2)')]}, {'node': 'Sunroom_(0, 0)', 'node_moves': [('north', 'Bar_(0, 1)')]}, {'node': 'Closet_(1, 1)', 'node_moves': [('west', 'Bar_(0, 1)'), ('north', 'Closet_(1, 2)')]}, {'node': 'Closet_(1, 1)', 'node_moves': [('west', 'Bar_(0, 1)'), ('north', 'Closet_(1, 2)')]}, {'node': 'Closet_(1, 2)', 'node_moves': [('south', 'Closet_(1, 1)'), ('east', 'Study room_(2, 2)')]}, {'node': 'Closet_(1, 2)', 'node_moves': [('south', 'Closet_(1, 1)'), ('east', 'Study room_(2, 2)')]}, {'node': 'Study room_(2, 2)', 'node_moves': [('west', 'Closet_(1, 2)'), ('north', 'Closet_(2, 3)')]}, {'node': 'Study room_(2, 2)', 'node_moves': [('west', 'Closet_(1, 2)'), ('north', 'Closet_(2, 3)')]}, {'node': 'Closet_(2, 3)', 'node_moves': [('south', 'Study room_(2, 2)'), ('west', 'Guest room_(1, 3)')]}, {'node': 'Closet_(2, 3)', 'node_moves': [('south', 'Study room_(2, 2)'), ('west', 'Guest room_(1, 3)')]}, {'node': 'Guest room_(1, 3)', 'node_moves': [('east', 'Closet_(2, 3)')]}]", "Cycle": "cycle_false", "Ambiguity": [1, 3], "Game_Type": "named_graph", "Loop_Reminder": false, "Loop_Reminder_Text": "It seems like we are going back and forth between two rooms. To stop exploring choose 'DONE' as our next action.", "Max_Turns_Reminder": true, "Max_Turns_Reminder_Text": "We have been exploring for a while now. To stop exploring choose 'DONE' as our next action.", "Question": "How many different $ROOM_CATEGORY$(s) did you encounter?", "First_Question_Answer": "('Closet', 3)", "Second_Question_Answer": "('Study room', 1)", "Third_Question_Answer": "('Wine cellar', 0)", "Question_reprompt": "Now once you have stopped the game, you need to answer some questions in this format: 'Answer: <answer>' replace <answer> with an appropriate integer."}, {"game_id": 23, "Prompt": "Please help me with the following task. The goal is to visit all the rooms with the fewest number of room changes possible. In each room, you need to decide the direction to go in. Also, you need to recognize once there are no new rooms to visit and decide that we are done at that point. Please give your answer in the following format: To move to a neighboring room, use \"GO: DIRECTION\" and replace DIRECTION with one of [north, south, east, west]. To stop the exploration, answer with \"DONE\" instead.\n\nHere is an example:\nYou are in the Kitchen. Currently available directions: south, west. What is your next instruction?\nGO: west\nYou have made a step and entered a Lobby. Currently available directions: east, south. What is your next instruction?\nGO: north\nThe move is not valid. You are still in the Lobby. Currently available directions: east, south. What is your next instruction?\nGO: east\nYou have made a step and entered a Garage. Currently available directions: south, west. What is your next instruction?\nGO: south\n...\nYou have made a step and entered a Bedroom. Currently available directions: south. What is your next instruction?\nDONE\n\nLet us start. You are in the $INITIAL_ROOM$. Currently available directions: $INITIAL_DIRECTIONS$. What is your next instruction?", "Player2_positive_answer": "You have made a step and entered $ANOTHER_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Player2_negative_answer": "The move is not valid. You are still in the $SAME_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Move_Construction": "GO:", "Stop_Construction": "DONE", "Grid_Dimension": "4", "Graph_Nodes": "['Bedroom_(3, 3)', 'Music room_(2, 3)', 'Bar_(3, 2)', 'Game room_(1, 3)', 'Garage_(0, 3)', 'Garage_(0, 2)', 'Bar_(0, 1)', 'Bedroom_(0, 0)']", "Graph_Edges": "[('Bedroom_(3, 3)', 'Music room_(2, 3)'), ('Bedroom_(3, 3)', 'Bar_(3, 2)'), ('Music room_(2, 3)', 'Game room_(1, 3)'), ('Game room_(1, 3)', 'Garage_(0, 3)'), ('Garage_(0, 3)', 'Garage_(0, 2)'), ('Garage_(0, 2)', 'Bar_(0, 1)'), ('Bar_(0, 1)', 'Bedroom_(0, 0)')]", "Current_Position": "Music room_(2, 3)", "Picture_Name": "graph_331.png", "Directions": "[('Bedroom_(3, 3)', ['south', 'west']), ('Music room_(2, 3)', ['east', 'west']), ('Bar_(3, 2)', ['north']), ('Game room_(1, 3)', ['east', 'west']), ('Garage_(0, 3)', ['south', 'east']), ('Garage_(0, 2)', ['south', 'north']), ('Bar_(0, 1)', ['south', 'north']), ('Bedroom_(0, 0)', ['north'])]", "Moves": "[{'node': 'Bedroom_(3, 3)', 'node_moves': [('south', 'Bar_(3, 2)'), ('west', 'Music room_(2, 3)')]}, {'node': 'Bedroom_(3, 3)', 'node_moves': [('south', 'Bar_(3, 2)'), ('west', 'Music room_(2, 3)')]}, {'node': 'Music room_(2, 3)', 'node_moves': [('east', 'Bedroom_(3, 3)'), ('west', 'Game room_(1, 3)')]}, {'node': 'Music room_(2, 3)', 'node_moves': [('east', 'Bedroom_(3, 3)'), ('west', 'Game room_(1, 3)')]}, {'node': 'Bar_(3, 2)', 'node_moves': [('north', 'Bedroom_(3, 3)')]}, {'node': 'Game room_(1, 3)', 'node_moves': [('east', 'Music room_(2, 3)'), ('west', 'Garage_(0, 3)')]}, {'node': 'Game room_(1, 3)', 'node_moves': [('east', 'Music room_(2, 3)'), ('west', 'Garage_(0, 3)')]}, {'node': 'Garage_(0, 3)', 'node_moves': [('south', 'Garage_(0, 2)'), ('east', 'Game room_(1, 3)')]}, {'node': 'Garage_(0, 3)', 'node_moves': [('south', 'Garage_(0, 2)'), ('east', 'Game room_(1, 3)')]}, {'node': 'Garage_(0, 2)', 'node_moves': [('south', 'Bar_(0, 1)'), ('north', 'Garage_(0, 3)')]}, {'node': 'Garage_(0, 2)', 'node_moves': [('south', 'Bar_(0, 1)'), ('north', 'Garage_(0, 3)')]}, {'node': 'Bar_(0, 1)', 'node_moves': [('south', 'Bedroom_(0, 0)'), ('north', 'Garage_(0, 2)')]}, {'node': 'Bar_(0, 1)', 'node_moves': [('south', 'Bedroom_(0, 0)'), ('north', 'Garage_(0, 2)')]}, {'node': 'Bedroom_(0, 0)', 'node_moves': [('north', 'Bar_(0, 1)')]}]", "Cycle": "cycle_false", "Ambiguity": [3, 2], "Game_Type": "named_graph", "Loop_Reminder": false, "Loop_Reminder_Text": "It seems like we are going back and forth between two rooms. To stop exploring choose 'DONE' as our next action.", "Max_Turns_Reminder": true, "Max_Turns_Reminder_Text": "We have been exploring for a while now. To stop exploring choose 'DONE' as our next action.", "Question": "How many different $ROOM_CATEGORY$(s) did you encounter?", "First_Question_Answer": "('Bar', 2)", "Second_Question_Answer": "('Garage', 2)", "Third_Question_Answer": "('Billiard room', 0)", "Question_reprompt": "Now once you have stopped the game, you need to answer some questions in this format: 'Answer: <answer>' replace <answer> with an appropriate integer."}, {"game_id": 24, "Prompt": "Please help me with the following task. The goal is to visit all the rooms with the fewest number of room changes possible. In each room, you need to decide the direction to go in. Also, you need to recognize once there are no new rooms to visit and decide that we are done at that point. Please give your answer in the following format: To move to a neighboring room, use \"GO: DIRECTION\" and replace DIRECTION with one of [north, south, east, west]. To stop the exploration, answer with \"DONE\" instead.\n\nHere is an example:\nYou are in the Kitchen. Currently available directions: south, west. What is your next instruction?\nGO: west\nYou have made a step and entered a Lobby. Currently available directions: east, south. What is your next instruction?\nGO: north\nThe move is not valid. You are still in the Lobby. Currently available directions: east, south. What is your next instruction?\nGO: east\nYou have made a step and entered a Garage. Currently available directions: south, west. What is your next instruction?\nGO: south\n...\nYou have made a step and entered a Bedroom. Currently available directions: south. What is your next instruction?\nDONE\n\nLet us start. You are in the $INITIAL_ROOM$. Currently available directions: $INITIAL_DIRECTIONS$. What is your next instruction?", "Player2_positive_answer": "You have made a step and entered $ANOTHER_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Player2_negative_answer": "The move is not valid. You are still in the $SAME_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Move_Construction": "GO:", "Stop_Construction": "DONE", "Grid_Dimension": "4", "Graph_Nodes": "['Gallery_(2, 3)', 'Laundry room_(2, 2)', 'Workshop_(3, 2)', 'Workshop_(3, 1)', 'Laundry room_(3, 0)', 'Home gym_(2, 0)', 'Home gym_(1, 0)', 'Craft room_(1, 1)']", "Graph_Edges": "[('Gallery_(2, 3)', 'Laundry room_(2, 2)'), ('Laundry room_(2, 2)', 'Workshop_(3, 2)'), ('Workshop_(3, 2)', 'Workshop_(3, 1)'), ('Workshop_(3, 1)', 'Laundry room_(3, 0)'), ('Laundry room_(3, 0)', 'Home gym_(2, 0)'), ('Home gym_(2, 0)', 'Home gym_(1, 0)'), ('Home gym_(1, 0)', 'Craft room_(1, 1)')]", "Current_Position": "Gallery_(2, 3)", "Picture_Name": "graph_5093.png", "Directions": "[('Gallery_(2, 3)', ['south']), ('Laundry room_(2, 2)', ['east', 'north']), ('Workshop_(3, 2)', ['south', 'west']), ('Workshop_(3, 1)', ['south', 'north']), ('Laundry room_(3, 0)', ['north', 'west']), ('Home gym_(2, 0)', ['east', 'west']), ('Home gym_(1, 0)', ['east', 'north']), ('Craft room_(1, 1)', ['south'])]", "Moves": "[{'node': 'Gallery_(2, 3)', 'node_moves': [('south', 'Laundry room_(2, 2)')]}, {'node': 'Laundry room_(2, 2)', 'node_moves': [('east', 'Workshop_(3, 2)'), ('north', 'Gallery_(2, 3)')]}, {'node': 'Laundry room_(2, 2)', 'node_moves': [('east', 'Workshop_(3, 2)'), ('north', 'Gallery_(2, 3)')]}, {'node': 'Workshop_(3, 2)', 'node_moves': [('south', 'Workshop_(3, 1)'), ('west', 'Laundry room_(2, 2)')]}, {'node': 'Workshop_(3, 2)', 'node_moves': [('south', 'Workshop_(3, 1)'), ('west', 'Laundry room_(2, 2)')]}, {'node': 'Workshop_(3, 1)', 'node_moves': [('south', 'Laundry room_(3, 0)'), ('north', 'Workshop_(3, 2)')]}, {'node': 'Workshop_(3, 1)', 'node_moves': [('south', 'Laundry room_(3, 0)'), ('north', 'Workshop_(3, 2)')]}, {'node': 'Laundry room_(3, 0)', 'node_moves': [('north', 'Workshop_(3, 1)'), ('west', 'Home gym_(2, 0)')]}, {'node': 'Laundry room_(3, 0)', 'node_moves': [('north', 'Workshop_(3, 1)'), ('west', 'Home gym_(2, 0)')]}, {'node': 'Home gym_(2, 0)', 'node_moves': [('east', 'Laundry room_(3, 0)'), ('west', 'Home gym_(1, 0)')]}, {'node': 'Home gym_(2, 0)', 'node_moves': [('east', 'Laundry room_(3, 0)'), ('west', 'Home gym_(1, 0)')]}, {'node': 'Home gym_(1, 0)', 'node_moves': [('east', 'Home gym_(2, 0)'), ('north', 'Craft room_(1, 1)')]}, {'node': 'Home gym_(1, 0)', 'node_moves': [('east', 'Home gym_(2, 0)'), ('north', 'Craft room_(1, 1)')]}, {'node': 'Craft room_(1, 1)', 'node_moves': [('south', 'Home gym_(1, 0)')]}]", "Cycle": "cycle_false", "Ambiguity": [3, 2], "Game_Type": "named_graph", "Loop_Reminder": false, "Loop_Reminder_Text": "It seems like we are going back and forth between two rooms. To stop exploring choose 'DONE' as our next action.", "Max_Turns_Reminder": true, "Max_Turns_Reminder_Text": "We have been exploring for a while now. To stop exploring choose 'DONE' as our next action.", "Question": "How many different $ROOM_CATEGORY$(s) did you encounter?", "First_Question_Answer": "('Workshop', 2)", "Second_Question_Answer": "('Home gym', 2)", "Third_Question_Answer": "('Music room', 0)", "Question_reprompt": "Now once you have stopped the game, you need to answer some questions in this format: 'Answer: <answer>' replace <answer> with an appropriate integer."}, {"game_id": 25, "Prompt": "Please help me with the following task. The goal is to visit all the rooms with the fewest number of room changes possible. In each room, you need to decide the direction to go in. Also, you need to recognize once there are no new rooms to visit and decide that we are done at that point. Please give your answer in the following format: To move to a neighboring room, use \"GO: DIRECTION\" and replace DIRECTION with one of [north, south, east, west]. To stop the exploration, answer with \"DONE\" instead.\n\nHere is an example:\nYou are in the Kitchen. Currently available directions: south, west. What is your next instruction?\nGO: west\nYou have made a step and entered a Lobby. Currently available directions: east, south. What is your next instruction?\nGO: north\nThe move is not valid. You are still in the Lobby. Currently available directions: east, south. What is your next instruction?\nGO: east\nYou have made a step and entered a Garage. Currently available directions: south, west. What is your next instruction?\nGO: south\n...\nYou have made a step and entered a Bedroom. Currently available directions: south. What is your next instruction?\nDONE\n\nLet us start. You are in the $INITIAL_ROOM$. Currently available directions: $INITIAL_DIRECTIONS$. What is your next instruction?", "Player2_positive_answer": "You have made a step and entered $ANOTHER_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Player2_negative_answer": "The move is not valid. You are still in the $SAME_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Move_Construction": "GO:", "Stop_Construction": "DONE", "Grid_Dimension": "4", "Graph_Nodes": "['Workshop_(2, 3)', 'Bathroom_(3, 3)', 'Nursery_(3, 2)', 'Utility room_(3, 1)', 'Bathroom_(3, 0)', 'Workshop_(2, 1)', 'Solarium_(2, 2)', 'Nursery_(2, 0)']", "Graph_Edges": "[('Workshop_(2, 3)', 'Bathroom_(3, 3)'), ('Bathroom_(3, 3)', 'Nursery_(3, 2)'), ('Nursery_(3, 2)', 'Utility room_(3, 1)'), ('Utility room_(3, 1)', 'Bathroom_(3, 0)'), ('Utility room_(3, 1)', 'Workshop_(2, 1)'), ('Workshop_(2, 1)', 'Solarium_(2, 2)'), ('Workshop_(2, 1)', 'Nursery_(2, 0)')]", "Current_Position": "Bathroom_(3, 3)", "Picture_Name": "graph_2636.png", "Directions": "[('Workshop_(2, 3)', ['east']), ('Bathroom_(3, 3)', ['south', 'west']), ('Nursery_(3, 2)', ['south', 'north']), ('Utility room_(3, 1)', ['south', 'north', 'west']), ('Bathroom_(3, 0)', ['north']), ('Workshop_(2, 1)', ['south', 'east', 'north']), ('Solarium_(2, 2)', ['south']), ('Nursery_(2, 0)', ['north'])]", "Moves": "[{'node': 'Workshop_(2, 3)', 'node_moves': [('east', 'Bathroom_(3, 3)')]}, {'node': 'Bathroom_(3, 3)', 'node_moves': [('south', 'Nursery_(3, 2)'), ('west', 'Workshop_(2, 3)')]}, {'node': 'Bathroom_(3, 3)', 'node_moves': [('south', 'Nursery_(3, 2)'), ('west', 'Workshop_(2, 3)')]}, {'node': 'Nursery_(3, 2)', 'node_moves': [('south', 'Utility room_(3, 1)'), ('north', 'Bathroom_(3, 3)')]}, {'node': 'Nursery_(3, 2)', 'node_moves': [('south', 'Utility room_(3, 1)'), ('north', 'Bathroom_(3, 3)')]}, {'node': 'Utility room_(3, 1)', 'node_moves': [('south', 'Bathroom_(3, 0)'), ('north', 'Nursery_(3, 2)'), ('west', 'Workshop_(2, 1)')]}, {'node': 'Utility room_(3, 1)', 'node_moves': [('south', 'Bathroom_(3, 0)'), ('north', 'Nursery_(3, 2)'), ('west', 'Workshop_(2, 1)')]}, {'node': 'Utility room_(3, 1)', 'node_moves': [('south', 'Bathroom_(3, 0)'), ('north', 'Nursery_(3, 2)'), ('west', 'Workshop_(2, 1)')]}, {'node': 'Bathroom_(3, 0)', 'node_moves': [('north', 'Utility room_(3, 1)')]}, {'node': 'Workshop_(2, 1)', 'node_moves': [('south', 'Nursery_(2, 0)'), ('east', 'Utility room_(3, 1)'), ('north', 'Solarium_(2, 2)')]}, {'node': 'Workshop_(2, 1)', 'node_moves': [('south', 'Nursery_(2, 0)'), ('east', 'Utility room_(3, 1)'), ('north', 'Solarium_(2, 2)')]}, {'node': 'Workshop_(2, 1)', 'node_moves': [('south', 'Nursery_(2, 0)'), ('east', 'Utility room_(3, 1)'), ('north', 'Solarium_(2, 2)')]}, {'node': 'Solarium_(2, 2)', 'node_moves': [('south', 'Workshop_(2, 1)')]}, {'node': 'Nursery_(2, 0)', 'node_moves': [('north', 'Workshop_(2, 1)')]}]", "Cycle": "cycle_false", "Ambiguity": [3, 2], "Game_Type": "named_graph", "Loop_Reminder": false, "Loop_Reminder_Text": "It seems like we are going back and forth between two rooms. To stop exploring choose 'DONE' as our next action.", "Max_Turns_Reminder": true, "Max_Turns_Reminder_Text": "We have been exploring for a while now. To stop exploring choose 'DONE' as our next action.", "Question": "How many different $ROOM_CATEGORY$(s) did you encounter?", "First_Question_Answer": "('Workshop', 2)", "Second_Question_Answer": "('Bathroom', 2)", "Third_Question_Answer": "('Gallery', 0)", "Question_reprompt": "Now once you have stopped the game, you need to answer some questions in this format: 'Answer: <answer>' replace <answer> with an appropriate integer."}, {"game_id": 26, "Prompt": "Please help me with the following task. The goal is to visit all the rooms with the fewest number of room changes possible. In each room, you need to decide the direction to go in. Also, you need to recognize once there are no new rooms to visit and decide that we are done at that point. Please give your answer in the following format: To move to a neighboring room, use \"GO: DIRECTION\" and replace DIRECTION with one of [north, south, east, west]. To stop the exploration, answer with \"DONE\" instead.\n\nHere is an example:\nYou are in the Kitchen. Currently available directions: south, west. What is your next instruction?\nGO: west\nYou have made a step and entered a Lobby. Currently available directions: east, south. What is your next instruction?\nGO: north\nThe move is not valid. You are still in the Lobby. Currently available directions: east, south. What is your next instruction?\nGO: east\nYou have made a step and entered a Garage. Currently available directions: south, west. What is your next instruction?\nGO: south\n...\nYou have made a step and entered a Bedroom. Currently available directions: south. What is your next instruction?\nDONE\n\nLet us start. You are in the $INITIAL_ROOM$. Currently available directions: $INITIAL_DIRECTIONS$. What is your next instruction?", "Player2_positive_answer": "You have made a step and entered $ANOTHER_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Player2_negative_answer": "The move is not valid. You are still in the $SAME_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Move_Construction": "GO:", "Stop_Construction": "DONE", "Grid_Dimension": "4", "Graph_Nodes": "['Playroom_(0, 0)', 'Foyer_(1, 0)', 'Playroom_(2, 0)', 'Library_(3, 0)', 'Foyer_(3, 1)', 'Guest room_(2, 1)', 'Foyer_(1, 1)', 'Playroom_(2, 2)']", "Graph_Edges": "[('Playroom_(0, 0)', 'Foyer_(1, 0)'), ('Foyer_(1, 0)', 'Playroom_(2, 0)'), ('Playroom_(2, 0)', 'Library_(3, 0)'), ('Library_(3, 0)', 'Foyer_(3, 1)'), ('Foyer_(3, 1)', 'Guest room_(2, 1)'), ('Guest room_(2, 1)', 'Foyer_(1, 1)'), ('Guest room_(2, 1)', 'Playroom_(2, 2)')]", "Current_Position": "Library_(3, 0)", "Picture_Name": "graph_5142.png", "Directions": "[('Playroom_(0, 0)', ['east']), ('Foyer_(1, 0)', ['east', 'west']), ('Playroom_(2, 0)', ['east', 'west']), ('Library_(3, 0)', ['west', 'north']), ('Foyer_(3, 1)', ['south', 'west']), ('Guest room_(2, 1)', ['north', 'east', 'west']), ('Foyer_(1, 1)', ['east']), ('Playroom_(2, 2)', ['south'])]", "Moves": "[{'node': 'Playroom_(0, 0)', 'node_moves': [('east', 'Foyer_(1, 0)')]}, {'node': 'Foyer_(1, 0)', 'node_moves': [('east', 'Playroom_(2, 0)'), ('west', 'Playroom_(0, 0)')]}, {'node': 'Foyer_(1, 0)', 'node_moves': [('east', 'Playroom_(2, 0)'), ('west', 'Playroom_(0, 0)')]}, {'node': 'Playroom_(2, 0)', 'node_moves': [('east', 'Library_(3, 0)'), ('west', 'Foyer_(1, 0)')]}, {'node': 'Playroom_(2, 0)', 'node_moves': [('east', 'Library_(3, 0)'), ('west', 'Foyer_(1, 0)')]}, {'node': 'Library_(3, 0)', 'node_moves': [('west', 'Playroom_(2, 0)'), ('north', 'Foyer_(3, 1)')]}, {'node': 'Library_(3, 0)', 'node_moves': [('west', 'Playroom_(2, 0)'), ('north', 'Foyer_(3, 1)')]}, {'node': 'Foyer_(3, 1)', 'node_moves': [('south', 'Library_(3, 0)'), ('west', 'Guest room_(2, 1)')]}, {'node': 'Foyer_(3, 1)', 'node_moves': [('south', 'Library_(3, 0)'), ('west', 'Guest room_(2, 1)')]}, {'node': 'Guest room_(2, 1)', 'node_moves': [('north', 'Playroom_(2, 2)'), ('east', 'Foyer_(3, 1)'), ('west', 'Foyer_(1, 1)')]}, {'node': 'Guest room_(2, 1)', 'node_moves': [('north', 'Playroom_(2, 2)'), ('east', 'Foyer_(3, 1)'), ('west', 'Foyer_(1, 1)')]}, {'node': 'Guest room_(2, 1)', 'node_moves': [('north', 'Playroom_(2, 2)'), ('east', 'Foyer_(3, 1)'), ('west', 'Foyer_(1, 1)')]}, {'node': 'Foyer_(1, 1)', 'node_moves': [('east', 'Guest room_(2, 1)')]}, {'node': 'Playroom_(2, 2)', 'node_moves': [('south', 'Guest room_(2, 1)')]}]", "Cycle": "cycle_false", "Ambiguity": [2, 3], "Game_Type": "named_graph", "Loop_Reminder": false, "Loop_Reminder_Text": "It seems like we are going back and forth between two rooms. To stop exploring choose 'DONE' as our next action.", "Max_Turns_Reminder": true, "Max_Turns_Reminder_Text": "We have been exploring for a while now. To stop exploring choose 'DONE' as our next action.", "Question": "How many different $ROOM_CATEGORY$(s) did you encounter?", "First_Question_Answer": "('Foyer', 3)", "Second_Question_Answer": "('Playroom', 3)", "Third_Question_Answer": "('Home office', 0)", "Question_reprompt": "Now once you have stopped the game, you need to answer some questions in this format: 'Answer: <answer>' replace <answer> with an appropriate integer."}, {"game_id": 27, "Prompt": "Please help me with the following task. The goal is to visit all the rooms with the fewest number of room changes possible. In each room, you need to decide the direction to go in. Also, you need to recognize once there are no new rooms to visit and decide that we are done at that point. Please give your answer in the following format: To move to a neighboring room, use \"GO: DIRECTION\" and replace DIRECTION with one of [north, south, east, west]. To stop the exploration, answer with \"DONE\" instead.\n\nHere is an example:\nYou are in the Kitchen. Currently available directions: south, west. What is your next instruction?\nGO: west\nYou have made a step and entered a Lobby. Currently available directions: east, south. What is your next instruction?\nGO: north\nThe move is not valid. You are still in the Lobby. Currently available directions: east, south. What is your next instruction?\nGO: east\nYou have made a step and entered a Garage. Currently available directions: south, west. What is your next instruction?\nGO: south\n...\nYou have made a step and entered a Bedroom. Currently available directions: south. What is your next instruction?\nDONE\n\nLet us start. You are in the $INITIAL_ROOM$. Currently available directions: $INITIAL_DIRECTIONS$. What is your next instruction?", "Player2_positive_answer": "You have made a step and entered $ANOTHER_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Player2_negative_answer": "The move is not valid. You are still in the $SAME_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Move_Construction": "GO:", "Stop_Construction": "DONE", "Grid_Dimension": "4", "Graph_Nodes": "['Pantry_(2, 2)', 'Craft room_(3, 2)', 'Pantry_(3, 3)', 'Pantry_(2, 3)', 'Bar_(1, 3)', 'Wine cellar_(1, 2)', 'Craft room_(1, 1)', 'Craft room_(1, 0)']", "Graph_Edges": "[('Pantry_(2, 2)', 'Craft room_(3, 2)'), ('Craft room_(3, 2)', 'Pantry_(3, 3)'), ('Pantry_(3, 3)', 'Pantry_(2, 3)'), ('Pantry_(2, 3)', 'Bar_(1, 3)'), ('Bar_(1, 3)', 'Wine cellar_(1, 2)'), ('Wine cellar_(1, 2)', 'Craft room_(1, 1)'), ('Craft room_(1, 1)', 'Craft room_(1, 0)')]", "Current_Position": "Craft room_(1, 0)", "Picture_Name": "graph_3906.png", "Directions": "[('Pantry_(2, 2)', ['east']), ('Craft room_(3, 2)', ['west', 'north']), ('Pantry_(3, 3)', ['south', 'west']), ('Pantry_(2, 3)', ['east', 'west']), ('Bar_(1, 3)', ['south', 'east']), ('Wine cellar_(1, 2)', ['south', 'north']), ('Craft room_(1, 1)', ['south', 'north']), ('Craft room_(1, 0)', ['north'])]", "Moves": "[{'node': 'Pantry_(2, 2)', 'node_moves': [('east', 'Craft room_(3, 2)')]}, {'node': 'Craft room_(3, 2)', 'node_moves': [('west', 'Pantry_(2, 2)'), ('north', 'Pantry_(3, 3)')]}, {'node': 'Craft room_(3, 2)', 'node_moves': [('west', 'Pantry_(2, 2)'), ('north', 'Pantry_(3, 3)')]}, {'node': 'Pantry_(3, 3)', 'node_moves': [('south', 'Craft room_(3, 2)'), ('west', 'Pantry_(2, 3)')]}, {'node': 'Pantry_(3, 3)', 'node_moves': [('south', 'Craft room_(3, 2)'), ('west', 'Pantry_(2, 3)')]}, {'node': 'Pantry_(2, 3)', 'node_moves': [('east', 'Pantry_(3, 3)'), ('west', 'Bar_(1, 3)')]}, {'node': 'Pantry_(2, 3)', 'node_moves': [('east', 'Pantry_(3, 3)'), ('west', 'Bar_(1, 3)')]}, {'node': 'Bar_(1, 3)', 'node_moves': [('south', 'Wine cellar_(1, 2)'), ('east', 'Pantry_(2, 3)')]}, {'node': 'Bar_(1, 3)', 'node_moves': [('south', 'Wine cellar_(1, 2)'), ('east', 'Pantry_(2, 3)')]}, {'node': 'Wine cellar_(1, 2)', 'node_moves': [('south', 'Craft room_(1, 1)'), ('north', 'Bar_(1, 3)')]}, {'node': 'Wine cellar_(1, 2)', 'node_moves': [('south', 'Craft room_(1, 1)'), ('north', 'Bar_(1, 3)')]}, {'node': 'Craft room_(1, 1)', 'node_moves': [('south', 'Craft room_(1, 0)'), ('north', 'Wine cellar_(1, 2)')]}, {'node': 'Craft room_(1, 1)', 'node_moves': [('south', 'Craft room_(1, 0)'), ('north', 'Wine cellar_(1, 2)')]}, {'node': 'Craft room_(1, 0)', 'node_moves': [('north', 'Craft room_(1, 1)')]}]", "Cycle": "cycle_false", "Ambiguity": [2, 3], "Game_Type": "named_graph", "Loop_Reminder": false, "Loop_Reminder_Text": "It seems like we are going back and forth between two rooms. To stop exploring choose 'DONE' as our next action.", "Max_Turns_Reminder": true, "Max_Turns_Reminder_Text": "We have been exploring for a while now. To stop exploring choose 'DONE' as our next action.", "Question": "How many different $ROOM_CATEGORY$(s) did you encounter?", "First_Question_Answer": "('Craft room', 3)", "Second_Question_Answer": "('Pantry', 3)", "Third_Question_Answer": "('Sunroom', 0)", "Question_reprompt": "Now once you have stopped the game, you need to answer some questions in this format: 'Answer: <answer>' replace <answer> with an appropriate integer."}, {"game_id": 28, "Prompt": "Please help me with the following task. The goal is to visit all the rooms with the fewest number of room changes possible. In each room, you need to decide the direction to go in. Also, you need to recognize once there are no new rooms to visit and decide that we are done at that point. Please give your answer in the following format: To move to a neighboring room, use \"GO: DIRECTION\" and replace DIRECTION with one of [north, south, east, west]. To stop the exploration, answer with \"DONE\" instead.\n\nHere is an example:\nYou are in the Kitchen. Currently available directions: south, west. What is your next instruction?\nGO: west\nYou have made a step and entered a Lobby. Currently available directions: east, south. What is your next instruction?\nGO: north\nThe move is not valid. You are still in the Lobby. Currently available directions: east, south. What is your next instruction?\nGO: east\nYou have made a step and entered a Garage. Currently available directions: south, west. What is your next instruction?\nGO: south\n...\nYou have made a step and entered a Bedroom. Currently available directions: south. What is your next instruction?\nDONE\n\nLet us start. You are in the $INITIAL_ROOM$. Currently available directions: $INITIAL_DIRECTIONS$. What is your next instruction?", "Player2_positive_answer": "You have made a step and entered $ANOTHER_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Player2_negative_answer": "The move is not valid. You are still in the $SAME_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Move_Construction": "GO:", "Stop_Construction": "DONE", "Grid_Dimension": "4", "Graph_Nodes": "['Library_(0, 3)', 'Library_(0, 2)', 'Nursery_(0, 1)', 'Bedroom_(1, 1)', 'Conservatory_(2, 1)', 'Bedroom_(3, 1)', 'Playroom_(3, 0)', 'Conservatory_(2, 0)']", "Graph_Edges": "[('Library_(0, 3)', 'Library_(0, 2)'), ('Library_(0, 2)', 'Nursery_(0, 1)'), ('Nursery_(0, 1)', 'Bedroom_(1, 1)'), ('Bedroom_(1, 1)', 'Conservatory_(2, 1)'), ('Conservatory_(2, 1)', 'Bedroom_(3, 1)'), ('Bedroom_(3, 1)', 'Playroom_(3, 0)'), ('Playroom_(3, 0)', 'Conservatory_(2, 0)')]", "Current_Position": "Nursery_(0, 1)", "Picture_Name": "graph_760.png", "Directions": "[('Library_(0, 3)', ['south']), ('Library_(0, 2)', ['south', 'north']), ('Nursery_(0, 1)', ['east', 'north']), ('Bedroom_(1, 1)', ['east', 'west']), ('Conservatory_(2, 1)', ['east', 'west']), ('Bedroom_(3, 1)', ['south', 'west']), ('Playroom_(3, 0)', ['north', 'west']), ('Conservatory_(2, 0)', ['east'])]", "Moves": "[{'node': 'Library_(0, 3)', 'node_moves': [('south', 'Library_(0, 2)')]}, {'node': 'Library_(0, 2)', 'node_moves': [('south', 'Nursery_(0, 1)'), ('north', 'Library_(0, 3)')]}, {'node': 'Library_(0, 2)', 'node_moves': [('south', 'Nursery_(0, 1)'), ('north', 'Library_(0, 3)')]}, {'node': 'Nursery_(0, 1)', 'node_moves': [('east', 'Bedroom_(1, 1)'), ('north', 'Library_(0, 2)')]}, {'node': 'Nursery_(0, 1)', 'node_moves': [('east', 'Bedroom_(1, 1)'), ('north', 'Library_(0, 2)')]}, {'node': 'Bedroom_(1, 1)', 'node_moves': [('east', 'Conservatory_(2, 1)'), ('west', 'Nursery_(0, 1)')]}, {'node': 'Bedroom_(1, 1)', 'node_moves': [('east', 'Conservatory_(2, 1)'), ('west', 'Nursery_(0, 1)')]}, {'node': 'Conservatory_(2, 1)', 'node_moves': [('east', 'Bedroom_(3, 1)'), ('west', 'Bedroom_(1, 1)')]}, {'node': 'Conservatory_(2, 1)', 'node_moves': [('east', 'Bedroom_(3, 1)'), ('west', 'Bedroom_(1, 1)')]}, {'node': 'Bedroom_(3, 1)', 'node_moves': [('south', 'Playroom_(3, 0)'), ('west', 'Conservatory_(2, 1)')]}, {'node': 'Bedroom_(3, 1)', 'node_moves': [('south', 'Playroom_(3, 0)'), ('west', 'Conservatory_(2, 1)')]}, {'node': 'Playroom_(3, 0)', 'node_moves': [('north', 'Bedroom_(3, 1)'), ('west', 'Conservatory_(2, 0)')]}, {'node': 'Playroom_(3, 0)', 'node_moves': [('north', 'Bedroom_(3, 1)'), ('west', 'Conservatory_(2, 0)')]}, {'node': 'Conservatory_(2, 0)', 'node_moves': [('east', 'Playroom_(3, 0)')]}]", "Cycle": "cycle_false", "Ambiguity": [3, 2], "Game_Type": "named_graph", "Loop_Reminder": false, "Loop_Reminder_Text": "It seems like we are going back and forth between two rooms. To stop exploring choose 'DONE' as our next action.", "Max_Turns_Reminder": true, "Max_Turns_Reminder_Text": "We have been exploring for a while now. To stop exploring choose 'DONE' as our next action.", "Question": "How many different $ROOM_CATEGORY$(s) did you encounter?", "First_Question_Answer": "('Library', 2)", "Second_Question_Answer": "('Conservatory', 2)", "Third_Question_Answer": "('Living room', 0)", "Question_reprompt": "Now once you have stopped the game, you need to answer some questions in this format: 'Answer: <answer>' replace <answer> with an appropriate integer."}, {"game_id": 29, "Prompt": "Please help me with the following task. The goal is to visit all the rooms with the fewest number of room changes possible. In each room, you need to decide the direction to go in. Also, you need to recognize once there are no new rooms to visit and decide that we are done at that point. Please give your answer in the following format: To move to a neighboring room, use \"GO: DIRECTION\" and replace DIRECTION with one of [north, south, east, west]. To stop the exploration, answer with \"DONE\" instead.\n\nHere is an example:\nYou are in the Kitchen. Currently available directions: south, west. What is your next instruction?\nGO: west\nYou have made a step and entered a Lobby. Currently available directions: east, south. What is your next instruction?\nGO: north\nThe move is not valid. You are still in the Lobby. Currently available directions: east, south. What is your next instruction?\nGO: east\nYou have made a step and entered a Garage. Currently available directions: south, west. What is your next instruction?\nGO: south\n...\nYou have made a step and entered a Bedroom. Currently available directions: south. What is your next instruction?\nDONE\n\nLet us start. You are in the $INITIAL_ROOM$. Currently available directions: $INITIAL_DIRECTIONS$. What is your next instruction?", "Player2_positive_answer": "You have made a step and entered $ANOTHER_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Player2_negative_answer": "The move is not valid. You are still in the $SAME_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Move_Construction": "GO:", "Stop_Construction": "DONE", "Grid_Dimension": "4", "Graph_Nodes": "['Living room_(0, 3)', 'Game room_(1, 3)', 'Kitchen_(2, 3)', 'Solarium_(2, 2)', 'Game room_(2, 1)', 'Garage_(3, 1)', 'Garage_(3, 0)', 'Kitchen_(2, 0)']", "Graph_Edges": "[('Living room_(0, 3)', 'Game room_(1, 3)'), ('Game room_(1, 3)', 'Kitchen_(2, 3)'), ('Kitchen_(2, 3)', 'Solarium_(2, 2)'), ('Solarium_(2, 2)', 'Game room_(2, 1)'), ('Game room_(2, 1)', 'Garage_(3, 1)'), ('Garage_(3, 1)', 'Garage_(3, 0)'), ('Garage_(3, 0)', 'Kitchen_(2, 0)')]", "Current_Position": "Game room_(2, 1)", "Picture_Name": "graph_4884.png", "Directions": "[('Living room_(0, 3)', ['east']), ('Game room_(1, 3)', ['east', 'west']), ('Kitchen_(2, 3)', ['south', 'west']), ('Solarium_(2, 2)', ['south', 'north']), ('Game room_(2, 1)', ['east', 'north']), ('Garage_(3, 1)', ['south', 'west']), ('Garage_(3, 0)', ['north', 'west']), ('Kitchen_(2, 0)', ['east'])]", "Moves": "[{'node': 'Living room_(0, 3)', 'node_moves': [('east', 'Game room_(1, 3)')]}, {'node': 'Game room_(1, 3)', 'node_moves': [('east', 'Kitchen_(2, 3)'), ('west', 'Living room_(0, 3)')]}, {'node': 'Game room_(1, 3)', 'node_moves': [('east', 'Kitchen_(2, 3)'), ('west', 'Living room_(0, 3)')]}, {'node': 'Kitchen_(2, 3)', 'node_moves': [('south', 'Solarium_(2, 2)'), ('west', 'Game room_(1, 3)')]}, {'node': 'Kitchen_(2, 3)', 'node_moves': [('south', 'Solarium_(2, 2)'), ('west', 'Game room_(1, 3)')]}, {'node': 'Solarium_(2, 2)', 'node_moves': [('south', 'Game room_(2, 1)'), ('north', 'Kitchen_(2, 3)')]}, {'node': 'Solarium_(2, 2)', 'node_moves': [('south', 'Game room_(2, 1)'), ('north', 'Kitchen_(2, 3)')]}, {'node': 'Game room_(2, 1)', 'node_moves': [('east', 'Garage_(3, 1)'), ('north', 'Solarium_(2, 2)')]}, {'node': 'Game room_(2, 1)', 'node_moves': [('east', 'Garage_(3, 1)'), ('north', 'Solarium_(2, 2)')]}, {'node': 'Garage_(3, 1)', 'node_moves': [('south', 'Garage_(3, 0)'), ('west', 'Game room_(2, 1)')]}, {'node': 'Garage_(3, 1)', 'node_moves': [('south', 'Garage_(3, 0)'), ('west', 'Game room_(2, 1)')]}, {'node': 'Garage_(3, 0)', 'node_moves': [('north', 'Garage_(3, 1)'), ('west', 'Kitchen_(2, 0)')]}, {'node': 'Garage_(3, 0)', 'node_moves': [('north', 'Garage_(3, 1)'), ('west', 'Kitchen_(2, 0)')]}, {'node': 'Kitchen_(2, 0)', 'node_moves': [('east', 'Garage_(3, 0)')]}]", "Cycle": "cycle_false", "Ambiguity": [3, 2], "Game_Type": "named_graph", "Loop_Reminder": false, "Loop_Reminder_Text": "It seems like we are going back and forth between two rooms. To stop exploring choose 'DONE' as our next action.", "Max_Turns_Reminder": true, "Max_Turns_Reminder_Text": "We have been exploring for a while now. To stop exploring choose 'DONE' as our next action.", "Question": "How many different $ROOM_CATEGORY$(s) did you encounter?", "First_Question_Answer": "('Kitchen', 2)", "Second_Question_Answer": "('Game room', 2)", "Third_Question_Answer": "('Sauna', 0)", "Question_reprompt": "Now once you have stopped the game, you need to answer some questions in this format: 'Answer: <answer>' replace <answer> with an appropriate integer."}]}]}